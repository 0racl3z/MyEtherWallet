{"version":3,"sources":["webpack:///./src/dapps/ManageENS/ManageENS.vue?7a9c","webpack:///./src/builds/mewcx/cxHelpers/extractRootDomain.js","webpack:///./src/dapps/ManageENS/supportedTxt.js","webpack:///./src/dapps/ManageENS/ABI/baseRegistrarAbi.js","webpack:///src/dapps/ManageENS/ManageENS.vue","webpack:///./src/dapps/ManageENS/ManageENS.vue?0861","webpack:///./src/dapps/ManageENS/ManageENS.vue?ca04","webpack:///./src/dapps/ManageENS/ManageENS.vue","webpack:///./src/dapps/ManageENS/ABI/permanentRegistrarController.js","webpack:///./src/dapps/ManageENS/ABI/fifsRegistrarAbi.js"],"names":["extractHostname","url","hostname","indexOf","split","extractRootDomain","domain","splitArr","arrLen","length","toLowerCase","isUrl","input","rootDomain","parsedInput","normalise","urlRegex","RegExp","test","isEmail","atIndex","parsedEmailName","substr","parsedEmailHost","emailRegex","isString","isHandle","includes","supportedTxt","name","type","validate","baseRegistrar","constant","inputs","outputs","payable","stateMutability","anonymous","indexed","INTERFACE_CONTROLLER","INTERFACE_LEGACY_REGISTRAR","FIFS","PERMANENT","components","data","domainName","loading","nameHash","labelHash","owner","deedOwner","secretPhrase","registrarAddress","raw","contractInitiated","step","domainNameErr","ensRegistryContract","dnsRegistrar","dnsClaim","dnsOwner","minimumAge","duration","commitmentCreated","publicResolverAddress","resolverMultiCoinSupport","supportedCoins","txtRecords","recordContract","resolverTxtSupport","usd","isController","computed","registrarTLD","this","network","ens","registrarType","multiTld","parsedTld","parsedHostName","hasTld","parsedDomainName","isSubDomain","watch","newVal","setRegistrar","mounted","$nextTick","fetchUsd","methods","setController","from","account","address","to","registrarContract","value","onlyGenerate","setControllerTx","web3","eth","sendTransaction","catch","transferDomain","REGISTRAR_TYPES","mew","sendBatchTransactions","getDecodedAddress","_coinItem","decodedAddress","decode","updateStep","val","processDNSresult","$router","push","updateDomainName","updateSecretPhrase","e","updateDuration","generateKeyPhrase","wordsArray","join","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","checkDomain","setMultiCoin","registerFifsName","claimFunc","createCommitment","registerWithDuration","setRecord","on","staticRenderFns","component","registrarController"],"mappings":"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CN,CACEL,KAAM,WACNC,KAAM,YAGVD,KAAM,oBACNM,QAAS,GACTC,SAAS,EACTC,gBAAiB,aACjBP,KAAM,YAER,CACEI,OAAQ,CACN,CACEL,KAAM,QACNC,KAAM,WAER,CACED,KAAM,UACNC,KAAM,WAER,CACED,KAAM,oBACNC,KAAM,WAER,CACED,KAAM,oBACNC,KAAM,YAGVM,SAAS,EACTC,gBAAiB,aACjBP,KAAM,eAER,CACEQ,WAAW,EACXJ,OAAQ,CACN,CACEK,SAAS,EACTV,KAAM,OACNC,KAAM,UAER,CACES,SAAS,EACTV,KAAM,QACNC,KAAM,WAER,CACES,SAAS,EACTV,KAAM,QACNC,KAAM,WAER,CACES,SAAS,EACTV,KAAM,OACNC,KAAM,WAER,CACES,SAAS,EACTV,KAAM,UACNC,KAAM,YAGVD,KAAM,iBACNC,KAAM,SAER,CACEQ,WAAW,EACXJ,OAAQ,CACN,CACEK,SAAS,EACTV,KAAM,OACNC,KAAM,UAER,CACES,SAAS,EACTV,KAAM,QACNC,KAAM,WAER,CACES,SAAS,EACTV,KAAM,OACNC,KAAM,WAER,CACES,SAAS,EACTV,KAAM,UACNC,KAAM,YAGVD,KAAM,cACNC,KAAM,SAER,CACEQ,WAAW,EACXJ,OAAQ,CACN,CACEK,SAAS,EACTV,KAAM,SACNC,KAAM,YAGVD,KAAM,iBACNC,KAAM,SAER,CACEQ,WAAW,EACXJ,OAAQ,CACN,CACEK,SAAS,EACTV,KAAM,gBACNC,KAAM,WAER,CACES,SAAS,EACTV,KAAM,WACNC,KAAM,YAGVD,KAAM,uBACNC,KAAM,SAER,CACEG,UAAU,EACVC,OAAQ,CACN,CACEL,KAAM,OACNC,KAAM,UAER,CACED,KAAM,WACNC,KAAM,YAGVD,KAAM,YACNM,QAAS,CACP,CACEN,KAAM,GACNC,KAAM,YAGVM,SAAS,EACTC,gBAAiB,OACjBP,KAAM,YAER,CACEG,UAAU,EACVC,OAAQ,CACN,CACEL,KAAM,OACNC,KAAM,WAGVD,KAAM,QACNM,QAAS,CACP,CACEN,KAAM,GACNC,KAAM,SAGVM,SAAS,EACTC,gBAAiB,OACjBP,KAAM,YAER,CACEG,UAAU,EACVC,OAAQ,CACN,CACEL,KAAM,OACNC,KAAM,WAGVD,KAAM,YACNM,QAAS,CACP,CACEN,KAAM,GACNC,KAAM,SAGVM,SAAS,EACTC,gBAAiB,OACjBP,KAAM,YAER,CACEG,UAAU,EACVC,OAAQ,CACN,CACEL,KAAM,OACNC,KAAM,UAER,CACED,KAAM,QACNC,KAAM,WAER,CACED,KAAM,SACNC,KAAM,YAGVD,KAAM,iBACNM,QAAS,CACP,CACEN,KAAM,GACNC,KAAM,YAGVM,SAAS,EACTC,gBAAiB,OACjBP,KAAM,YAER,CACEG,UAAU,EACVC,OAAQ,CACN,CACEL,KAAM,OACNC,KAAM,UAER,CACED,KAAM,QACNC,KAAM,WAER,CACED,KAAM,SACNC,KAAM,WAER,CACED,KAAM,WACNC,KAAM,WAER,CACED,KAAM,OACNC,KAAM,YAGVD,KAAM,2BACNM,QAAS,CACP,CACEN,KAAM,GACNC,KAAM,YAGVM,SAAS,EACTC,gBAAiB,OACjBP,KAAM,YAER,CACEG,UAAU,EACVC,OAAQ,CACN,CACEL,KAAM,aACNC,KAAM,YAGVD,KAAM,SACNM,QAAS,GACTC,SAAS,EACTC,gBAAiB,aACjBP,KAAM,YAER,CACEG,UAAU,EACVC,OAAQ,CACN,CACEL,KAAM,OACNC,KAAM,UAER,CACED,KAAM,QACNC,KAAM,WAER,CACED,KAAM,WACNC,KAAM,WAER,CACED,KAAM,SACNC,KAAM,YAGVD,KAAM,WACNM,QAAS,GACTC,SAAS,EACTC,gBAAiB,UACjBP,KAAM,YAER,CACEG,UAAU,EACVC,OAAQ,CACN,CACEL,KAAM,OACNC,KAAM,UAER,CACED,KAAM,QACNC,KAAM,WAER,CACED,KAAM,WACNC,KAAM,WAER,CACED,KAAM,SACNC,KAAM,WAER,CACED,KAAM,WACNC,KAAM,WAER,CACED,KAAM,OACNC,KAAM,YAGVD,KAAM,qBACNM,QAAS,GACTC,SAAS,EACTC,gBAAiB,UACjBP,KAAM,YAER,CACEG,UAAU,EACVC,OAAQ,CACN,CACEL,KAAM,OACNC,KAAM,UAER,CACED,KAAM,WACNC,KAAM,YAGVD,KAAM,QACNM,QAAS,GACTC,SAAS,EACTC,gBAAiB,UACjBP,KAAM,YAER,CACEG,UAAU,EACVC,OAAQ,CACN,CACEL,KAAM,UACNC,KAAM,YAGVD,KAAM,iBACNM,QAAS,GACTC,SAAS,EACTC,gBAAiB,aACjBP,KAAM,YAER,CACEG,UAAU,EACVC,OAAQ,CACN,CACEL,KAAM,oBACNC,KAAM,WAER,CACED,KAAM,oBACNC,KAAM,YAGVD,KAAM,oBACNM,QAAS,CACP,CACEN,KAAM,GACNC,KAAM,SAGVM,SAAS,EACTC,gBAAiB,aACjBP,KAAM,YAER,CACEG,UAAU,EACVC,OAAQ,GACRL,KAAM,WACNM,QAAS,GACTC,SAAS,EACTC,gBAAiB,aACjBP,KAAM,YAER,CACEG,UAAU,EACVC,OAAQ,CACN,CACEL,KAAM,cACNC,KAAM,WAGVD,KAAM,oBACNM,QAAS,CACP,CACEN,KAAM,GACNC,KAAM,SAGVM,SAAS,EACTC,gBAAiB,OACjBP,KAAM,aAIKiH,U,kCC1fA,QACb,CACE9G,UAAU,EACVC,OAAQ,GACRL,KAAM,MACNM,QAAS,CACP,CACEN,KAAM,GACNC,KAAM,YAGVM,SAAS,EACTN,KAAM,YAER,CACEG,UAAU,EACVC,OAAQ,CACN,CACEL,KAAM,GACNC,KAAM,YAGVD,KAAM,cACNM,QAAS,CACP,CACEN,KAAM,GACNC,KAAM,YAGVM,SAAS,EACTN,KAAM,YAER,CACEG,UAAU,EACVC,OAAQ,CACN,CACEL,KAAM,UACNC,KAAM,WAER,CACED,KAAM,QACNC,KAAM,YAGVD,KAAM,WACNM,QAAS,GACTC,SAAS,EACTN,KAAM,YAER,CACEG,UAAU,EACVC,OAAQ,GACRL,KAAM,WACNM,QAAS,CACP,CACEN,KAAM,GACNC,KAAM,YAGVM,SAAS,EACTN,KAAM,YAER,CACEI,OAAQ,CACN,CACEL,KAAM,UACNC,KAAM,WAER,CACED,KAAM,OACNC,KAAM,YAGVA,KAAM","file":"js/chunk-7f4ae02d.e1694f53.js","sourcesContent":["import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ManageENS.vue?vue&type=style&index=0&id=784622fa&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ManageENS.vue?vue&type=style&index=0&id=784622fa&lang=scss&scoped=true&\"","const extractHostname = url => {\n  let hostname;\n  if (url.indexOf('://') > -1) {\n    hostname = url.split('/')[2];\n  } else {\n    hostname = url.split('/')[0];\n  }\n\n  hostname = hostname.split(':')[0];\n  hostname = hostname.split('?')[0];\n\n  return hostname;\n};\n\nconst extractRootDomain = url => {\n  if (!url) return '';\n  let domain = extractHostname(url);\n  const splitArr = domain.split('.');\n  const arrLen = splitArr.length;\n\n  if (arrLen > 2) {\n    domain = splitArr[arrLen - 2] + '.' + splitArr[arrLen - 1];\n    if (splitArr[arrLen - 2].length == 2 && splitArr[arrLen - 1].length == 2) {\n      domain = splitArr[arrLen - 3] + '.' + domain;\n    }\n  }\n\n  return domain.toLowerCase();\n};\n\nexport { extractRootDomain };\n","/* eslint-disable security/detect-unsafe-regex */\nimport normalise from '@/helpers/normalise';\nimport { extractRootDomain } from '@/builds/mewcx/cxHelpers/extractRootDomain.js';\nconst isUrl = function (input) {\n  const rootDomain = extractRootDomain(input);\n  const parsedInput = normalise(rootDomain);\n  const urlRegex = new RegExp(\n    /^(?:(?:https?|ftp):\\/\\/)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/\\S*)?$/\n  );\n  return urlRegex.test(parsedInput.toLowerCase());\n};\n\nconst isEmail = function (input) {\n  const atIndex = input.indexOf('@');\n  const parsedEmailName = normalise(input.substr(0, atIndex));\n  const parsedEmailHost = normalise(input.substr(atIndex + 1, input.length));\n  const emailRegex = new RegExp(\n    // eslint-disable-next-line no-useless-escape\n    /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,24}))$/\n  );\n  return emailRegex.test(`${parsedEmailName}@${parsedEmailHost}`.toLowerCase());\n};\n\nconst isString = function (input) {\n  const parsedInput = normalise(input);\n  return typeof parsedInput === 'string';\n};\n\nconst isHandle = function (input) {\n  const atIndex = input.indexOf('@');\n  const parsedInput = normalise(input.substr(atIndex + 1, input.length));\n  if (!isString(parsedInput)) return false;\n\n  return !parsedInput.includes('@');\n};\n\nconst supportedTxt = [\n  {\n    name: 'email',\n    type: 'email',\n    validate: isEmail\n  },\n  {\n    name: 'url',\n    type: 'url',\n    validate: isUrl\n  },\n  {\n    name: 'avatar',\n    type: 'url',\n    validate: isUrl\n  },\n  {\n    name: 'description',\n    type: 'string',\n    validate: isString\n  },\n  {\n    name: 'notice',\n    type: 'string',\n    validate: isString\n  },\n  {\n    name: 'keywords',\n    type: 'string',\n    validate: isString\n  },\n  {\n    name: 'vnd.twitter',\n    type: 'string',\n    validate: isHandle\n  },\n  {\n    name: 'vnd.github',\n    type: 'string',\n    validate: isHandle\n  }\n];\nexport default supportedTxt;\n","const baseRegistrar = [\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'tokenId',\n        type: 'uint256'\n      }\n    ],\n    name: 'getApproved',\n    outputs: [\n      {\n        name: '',\n        type: 'address'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: 'to',\n        type: 'address'\n      },\n      {\n        name: 'tokenId',\n        type: 'uint256'\n      }\n    ],\n    name: 'approve',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: 'from',\n        type: 'address'\n      },\n      {\n        name: 'to',\n        type: 'address'\n      },\n      {\n        name: 'tokenId',\n        type: 'uint256'\n      }\n    ],\n    name: 'transferFrom',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'ens',\n    outputs: [\n      {\n        name: '',\n        type: 'address'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: 'from',\n        type: 'address'\n      },\n      {\n        name: 'to',\n        type: 'address'\n      },\n      {\n        name: 'tokenId',\n        type: 'uint256'\n      }\n    ],\n    name: 'safeTransferFrom',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'transferPeriodEnds',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'MIGRATION_LOCK_PERIOD',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'owner',\n        type: 'address'\n      }\n    ],\n    name: 'balanceOf',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: 'renounceOwnership',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'owner',\n    outputs: [\n      {\n        name: '',\n        type: 'address'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'isOwner',\n    outputs: [\n      {\n        name: '',\n        type: 'bool'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: 'to',\n        type: 'address'\n      },\n      {\n        name: 'approved',\n        type: 'bool'\n      }\n    ],\n    name: 'setApprovalForAll',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'previousRegistrar',\n    outputs: [\n      {\n        name: '',\n        type: 'address'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: 'from',\n        type: 'address'\n      },\n      {\n        name: 'to',\n        type: 'address'\n      },\n      {\n        name: 'tokenId',\n        type: 'uint256'\n      },\n      {\n        name: '_data',\n        type: 'bytes'\n      }\n    ],\n    name: 'safeTransferFrom',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'GRACE_PERIOD',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: '',\n        type: 'address'\n      }\n    ],\n    name: 'controllers',\n    outputs: [\n      {\n        name: '',\n        type: 'bool'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'baseNode',\n    outputs: [\n      {\n        name: '',\n        type: 'bytes32'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'owner',\n        type: 'address'\n      },\n      {\n        name: 'operator',\n        type: 'address'\n      }\n    ],\n    name: 'isApprovedForAll',\n    outputs: [\n      {\n        name: '',\n        type: 'bool'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: 'newOwner',\n        type: 'address'\n      }\n    ],\n    name: 'transferOwnership',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [\n      {\n        name: '_ens',\n        type: 'address'\n      },\n      {\n        name: '_previousRegistrar',\n        type: 'address'\n      },\n      {\n        name: '_baseNode',\n        type: 'bytes32'\n      },\n      {\n        name: '_transferPeriodEnds',\n        type: 'uint256'\n      }\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'constructor'\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: 'controller',\n        type: 'address'\n      }\n    ],\n    name: 'ControllerAdded',\n    type: 'event'\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: 'controller',\n        type: 'address'\n      }\n    ],\n    name: 'ControllerRemoved',\n    type: 'event'\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: 'id',\n        type: 'uint256'\n      },\n      {\n        indexed: true,\n        name: 'owner',\n        type: 'address'\n      },\n      {\n        indexed: false,\n        name: 'expires',\n        type: 'uint256'\n      }\n    ],\n    name: 'NameMigrated',\n    type: 'event'\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: 'id',\n        type: 'uint256'\n      },\n      {\n        indexed: true,\n        name: 'owner',\n        type: 'address'\n      },\n      {\n        indexed: false,\n        name: 'expires',\n        type: 'uint256'\n      }\n    ],\n    name: 'NameRegistered',\n    type: 'event'\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: 'id',\n        type: 'uint256'\n      },\n      {\n        indexed: false,\n        name: 'expires',\n        type: 'uint256'\n      }\n    ],\n    name: 'NameRenewed',\n    type: 'event'\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: 'previousOwner',\n        type: 'address'\n      },\n      {\n        indexed: true,\n        name: 'newOwner',\n        type: 'address'\n      }\n    ],\n    name: 'OwnershipTransferred',\n    type: 'event'\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: 'from',\n        type: 'address'\n      },\n      {\n        indexed: true,\n        name: 'to',\n        type: 'address'\n      },\n      {\n        indexed: true,\n        name: 'tokenId',\n        type: 'uint256'\n      }\n    ],\n    name: 'Transfer',\n    type: 'event'\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: 'owner',\n        type: 'address'\n      },\n      {\n        indexed: true,\n        name: 'approved',\n        type: 'address'\n      },\n      {\n        indexed: true,\n        name: 'tokenId',\n        type: 'uint256'\n      }\n    ],\n    name: 'Approval',\n    type: 'event'\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: 'owner',\n        type: 'address'\n      },\n      {\n        indexed: true,\n        name: 'operator',\n        type: 'address'\n      },\n      {\n        indexed: false,\n        name: 'approved',\n        type: 'bool'\n      }\n    ],\n    name: 'ApprovalForAll',\n    type: 'event'\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'tokenId',\n        type: 'uint256'\n      }\n    ],\n    name: 'ownerOf',\n    outputs: [\n      {\n        name: '',\n        type: 'address'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: 'controller',\n        type: 'address'\n      }\n    ],\n    name: 'addController',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: 'controller',\n        type: 'address'\n      }\n    ],\n    name: 'removeController',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: 'resolver',\n        type: 'address'\n      }\n    ],\n    name: 'setResolver',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'id',\n        type: 'uint256'\n      }\n    ],\n    name: 'nameExpires',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'id',\n        type: 'uint256'\n      }\n    ],\n    name: 'available',\n    outputs: [\n      {\n        name: '',\n        type: 'bool'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: 'id',\n        type: 'uint256'\n      },\n      {\n        name: 'owner',\n        type: 'address'\n      },\n      {\n        name: 'duration',\n        type: 'uint256'\n      }\n    ],\n    name: 'register',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256'\n      }\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: 'id',\n        type: 'uint256'\n      },\n      {\n        name: 'duration',\n        type: 'uint256'\n      }\n    ],\n    name: 'renew',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256'\n      }\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: 'id',\n        type: 'uint256'\n      },\n      {\n        name: 'owner',\n        type: 'address'\n      }\n    ],\n    name: 'reclaim',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: 'label',\n        type: 'bytes32'\n      },\n      {\n        name: 'deed',\n        type: 'address'\n      },\n      {\n        name: '',\n        type: 'uint256'\n      }\n    ],\n    name: 'acceptRegistrarTransfer',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'interfaceID',\n        type: 'bytes4'\n      }\n    ],\n    name: 'supportsInterface',\n    outputs: [\n      {\n        name: '',\n        type: 'bool'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  }\n];\nexport default baseRegistrar;\n","<template>\n  <div class=\"manage-ens-container\">\n    <back-button />\n    <router-view\n      :contract-initiated=\"contractInitiated\"\n      :check-domain=\"checkDomain\"\n      :secret-phrase=\"secretPhrase\"\n      :host-name=\"parsedHostName\"\n      :domain-name=\"parsedDomainName\"\n      :loading=\"loading\"\n      :name-hash=\"nameHash\"\n      :label-hash=\"labelHash\"\n      :owner=\"owner\"\n      :deed-owner=\"deedOwner\"\n      :raw=\"raw\"\n      :step=\"step\"\n      :domain-name-err=\"domainNameErr\"\n      :generate-key-phrase=\"generateKeyPhrase\"\n      :set-multi-coin=\"setMultiCoin\"\n      :transfer-domain=\"transferDomain\"\n      :tld=\"parsedTld === '' ? network.type.ens.registrarTLD : parsedTld\"\n      :network-name=\"network.type.name\"\n      :register-fifs-name=\"registerFifsName\"\n      :multi-tld=\"multiTld\"\n      :claim-func=\"claimFunc\"\n      :dns-owner=\"dnsOwner\"\n      :dns-claim=\"dnsClaim\"\n      :create-commitment=\"createCommitment\"\n      :register-with-duration=\"registerWithDuration\"\n      :minimum-age=\"minimumAge\"\n      :commitment-created=\"commitmentCreated\"\n      :resolver-multi-coin-support=\"resolverMultiCoinSupport\"\n      :resolver-txt-support=\"resolverTxtSupport\"\n      :supported-coins=\"supportedCoins\"\n      :txt-records=\"txtRecords\"\n      :set-record=\"setRecord\"\n      :usd=\"usd\"\n      :is-controller=\"isController\"\n      :set-controller=\"setController\"\n      @updateSecretPhrase=\"updateSecretPhrase\"\n      @domainNameChange=\"updateDomainName\"\n      @updateStep=\"updateStep\"\n      @updateDuration=\"updateDuration\"\n    />\n  </div>\n</template>\n\n<script>\nimport BackButton from '@/layouts/InterfaceLayout/components/BackButton';\nimport PermanentRegistrarControllerAbi from './ABI/permanentRegistrarController';\nimport baseRegistrarAbi from './ABI/baseRegistrarAbi';\nimport RegistryAbi from './ABI/registryAbi.js';\nimport FifsRegistrarAbi from './ABI/fifsRegistrarAbi.js';\nimport ResolverAbi from './ABI/resolverAbi.js';\nimport * as unit from 'ethjs-unit';\nimport * as nameHashPckg from 'eth-ens-namehash';\nimport normalise from '@/helpers/normalise';\nimport { mapState } from 'vuex';\nimport { Toast } from '@/helpers';\nimport DNSRegistrar from '@ensdomains/dnsregistrar';\nimport BigNumber from 'bignumber.js';\nimport supportedCoins from './supportedCoins';\nimport supportedTxt from './supportedTxt';\n\nconst bip39 = require('bip39');\n\nconst permanentRegistrar = {\n  INTERFACE_CONTROLLER: '0x018fac06',\n  INTERFACE_LEGACY_REGISTRAR: '0x7ba18ba1'\n};\nconst MULTICOIN_SUPPORT_INTERFACE = '0xf1cb7e06';\nconst TEXT_RECORD_SUPPORT_INTERFACE = '0x59d1d43c';\nconst REGISTRAR_TYPES = {\n  FIFS: 'fifs',\n  PERMANENT: 'permanent'\n};\nexport default {\n  components: {\n    'back-button': BackButton\n  },\n  data() {\n    return {\n      domainName: '',\n      loading: false,\n      nameHash: '',\n      labelHash: '',\n      owner: '',\n      deedOwner: '',\n      secretPhrase: '',\n      registrarAddress: '',\n      raw: {},\n      contractInitiated: false,\n      step: 1,\n      domainNameErr: false,\n      ensRegistryContract: {},\n      dnsRegistrar: {},\n      dnsClaim: {},\n      dnsOwner: '',\n      minimumAge: 0,\n      duration: 1,\n      commitmentCreated: false,\n      publicResolverAddress: '',\n      resolverMultiCoinSupport: false,\n      supportedCoins,\n      txtRecords: {},\n      supportedTxt,\n      recordContract: {},\n      resolverTxtSupport: false,\n      usd: 0,\n      isController: false\n    };\n  },\n  computed: {\n    ...mapState('main', ['web3', 'network', 'account', 'gasPrice', 'ens']),\n    registrarTLD() {\n      return this.network.type.ens.registrarTLD;\n    },\n    registrarType() {\n      return this.network.type.ens.registrarType;\n    },\n    multiTld() {\n      return (\n        this.network.type.ens.hasOwnProperty('supportedTld') &&\n        this.network.type.ens.supportedTld.length > 1\n      );\n    },\n    parsedTld() {\n      if (this.parsedHostName.length) {\n        const hasTld = this.domainName.lastIndexOf('.');\n        return hasTld > -1\n          ? this.domainName.substr(hasTld + 1, this.domainName.length)\n          : this.registrarTLD;\n      }\n      return '';\n    },\n    parsedHostName() {\n      return this.domainName.substr(\n        0,\n        this.domainName.lastIndexOf('.') > -1\n          ? this.domainName.lastIndexOf('.')\n          : this.domainName.length\n      );\n    },\n    parsedDomainName() {\n      return this.parsedHostName + '.' + this.parsedTld;\n    },\n    isSubDomain() {\n      return this.domainName.split('.').length - 1 > 1;\n    }\n  },\n  watch: {\n    ens(newVal) {\n      if (newVal) {\n        this.setRegistrar();\n      }\n    }\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.setup();\n    });\n\n    this.fetchUsd();\n  },\n  methods: {\n    async fetchUsd() {\n      const url = 'https://cryptorates.mewapi.io/ticker?filter=ETH';\n      const fetchValues = await fetch(url);\n      const values = await fetchValues.json();\n      this.usd = values.data.ETH.quotes.USD.price;\n    },\n    async setup() {\n      this.isPermanentLive = true;\n      this.domainName = '';\n      this.loading = false;\n      this.nameHash = '';\n      this.labelHash = '';\n      this.owner = '';\n      this.deedOwner = '';\n      this.secretPhrase = '';\n      this.registrarAddress = '';\n      this.raw = {};\n      this.contractInitiated = false;\n      this.step = 1;\n      this.contractInitiated = false;\n      this.contractInitiated = true;\n      this.domainNameErr = false;\n      this.dnsRegistrar = {};\n      this.dnsClaim = {};\n      this.minimumAge = 0;\n      this.duration = 1;\n      this.commitmentCreated = false;\n      this.publicResolverAddress = '';\n      this.resolverMultiCoinSupport = false;\n      this.resolverTxtSupport = false;\n      this.supportedCoins = supportedCoins;\n      this.txtRecords = {};\n      this.recordContract = {};\n\n      if (this.ens) {\n        this.setRegistrar();\n      }\n      for (const type in this.supportedCoins)\n        this.supportedCoins[type].value = '';\n    },\n    async checkIfController() {\n      // checks the controller for the name\n      const owner = await this.ensRegistryContract.methods\n        .owner(this.nameHash)\n        .call();\n      this.isController =\n        this.web3.utils.toChecksumAddress(owner) ===\n        this.web3.utils.toChecksumAddress(this.account.address);\n    },\n    async setRegistrar() {\n      const web3 = this.web3;\n      const tld = this.registrarTLD;\n      this.registrarAddress = await this.getRegistrarAddress(tld);\n      this.ensRegistryContract = new web3.eth.Contract(\n        RegistryAbi,\n        this.network.type.ens.registry\n      );\n      if (this.registrarType === REGISTRAR_TYPES.FIFS) {\n        this.registrarContract = new web3.eth.Contract(\n          FifsRegistrarAbi,\n          this.registrarAddress\n        );\n      } else if (this.registrarType === REGISTRAR_TYPES.PERMANENT) {\n        try {\n          const controllerAddress = await this.ens\n            .resolver(this.registrarTLD, ResolverAbi)\n            .interfaceImplementer(permanentRegistrar.INTERFACE_CONTROLLER);\n\n          this.registrarControllerContract = new this.web3.eth.Contract(\n            PermanentRegistrarControllerAbi,\n            controllerAddress\n          );\n          this.registrarContract = new this.web3.eth.Contract(\n            baseRegistrarAbi,\n            this.registrarAddress\n          );\n        } catch (e) {\n          this.isPermanentLive = false;\n          const toastText = this.$t('ens.error.permanent-not-available');\n          Toast.responseHandler(toastText, Toast.ERROR);\n        }\n      }\n    },\n    setController(toAddress = '', onlyGenerate = false) {\n      const actualToAddress =\n        toAddress === '' ? this.account.address : toAddress;\n      const setControllerTx = {\n        from: this.account.address,\n        to: this.registrarAddress,\n        data: this.registrarContract.methods\n          .reclaim(this.labelHash, actualToAddress)\n          .encodeABI(),\n        value: 0\n      };\n\n      if (onlyGenerate) {\n        return setControllerTx;\n      }\n      this.web3.eth.sendTransaction(setControllerTx).catch(err => {\n        Toast.responseHandler(err, false);\n      });\n    },\n    transferDomain(toAddress) {\n      if (this.registrarType === REGISTRAR_TYPES.FIFS) {\n        this.web3.eth\n          .sendTransaction({\n            from: this.account.address,\n            to: this.network.type.ens.registry,\n            data: this.ensRegistryContract.methods\n              .setOwner(this.nameHash, toAddress)\n              .encodeABI(),\n            value: 0\n          })\n          .catch(err => {\n            Toast.responseHandler(err, false);\n          });\n      } else if (this.registrarType === REGISTRAR_TYPES.PERMANENT) {\n        const registryTransferTx = this.setController(toAddress, true);\n        const safeTransferTx = {\n          from: this.account.address,\n          to: this.registrarAddress,\n          data: this.registrarContract.methods\n            .transferFrom(this.account.address, toAddress, this.labelHash)\n            .encodeABI(),\n          value: 0\n        };\n        this.web3.mew.sendBatchTransactions(\n          [registryTransferTx, safeTransferTx].filter(Boolean)\n        );\n      }\n    },\n    getDecodedAddress(_coinItem) {\n      let decodedAddress = '0x';\n      if (_coinItem.value !== '' && _coinItem.value) {\n        decodedAddress = _coinItem.decode(_coinItem.value);\n      }\n      return decodedAddress;\n    },\n    async resolverMigrateAndSet() {\n      const web3 = this.web3;\n      const address = this.account.address;\n      const publicResolverAddress = this.publicResolverAddress;\n      const currentResolverAddress = await this.ensRegistryContract.methods\n        .resolver(this.nameHash)\n        .call();\n      if (\n        publicResolverAddress.toLowerCase() ===\n        currentResolverAddress.toLowerCase()\n      )\n        return false;\n      const publicResolverContract = new web3.eth.Contract(\n        ResolverAbi,\n        publicResolverAddress\n      );\n      const setResolverTx = {\n        from: address,\n        to: this.network.type.ens.registry,\n        data: this.ensRegistryContract.methods\n          .setResolver(this.nameHash, publicResolverAddress)\n          .encodeABI(),\n        value: 0,\n        gasPrice: new BigNumber(unit.toWei(this.gasPrice, 'gwei')).toFixed()\n      };\n      const multiCallRecords = [];\n      for (const coin in this.supportedCoins) {\n        if (this.supportedCoins[coin].value) {\n          multiCallRecords.push(\n            publicResolverContract.methods\n              .setAddr(\n                this.nameHash,\n                this.supportedCoins[coin].id,\n                this.getDecodedAddress(this.supportedCoins[coin])\n              )\n              .encodeABI()\n          );\n        }\n      }\n      for (const txt in this.txtRecords) {\n        if (this.txtRecords[txt]) {\n          multiCallRecords.push(\n            this.recordContract.methods\n              .setText(this.nameHash, txt, this.txtRecords[txt])\n              .encodeABI()\n          );\n        }\n      }\n      const migrateRecordsTx = {\n        from: address,\n        to: publicResolverAddress,\n        data: publicResolverContract.methods\n          .multicall(multiCallRecords)\n          .encodeABI(),\n        value: 0,\n        gasPrice: new BigNumber(unit.toWei(this.gasPrice, 'gwei')).toFixed()\n      };\n      web3.mew.sendBatchTransactions(\n        [migrateRecordsTx, setResolverTx].filter(Boolean)\n      );\n      return true;\n    },\n    async setMultiCoin(coin) {\n      coin.forEach(_coin => {\n        this.supportedCoins[_coin.symbol].value = _coin.value;\n      });\n      const isMigrate = await this.resolverMigrateAndSet();\n      if (isMigrate) return;\n      const web3 = this.web3;\n      const address = this.account.address;\n      const publicResolverAddress = this.publicResolverAddress;\n      const publicResolverContract = new web3.eth.Contract(\n        ResolverAbi,\n        publicResolverAddress\n      );\n      const arr = coin.map(item => {\n        return publicResolverContract.methods\n          .setAddr(this.nameHash, item.id, this.getDecodedAddress(item))\n          .encodeABI();\n      });\n      const setAddrTx = {\n        from: address,\n        to: publicResolverAddress,\n        data: publicResolverContract.methods.multicall(arr).encodeABI(),\n        value: 0,\n        gasPrice: new BigNumber(unit.toWei(this.gasPrice, 'gwei')).toFixed(),\n        gas: 100000\n      };\n      web3.eth.sendTransaction(setAddrTx).catch(err => {\n        Toast.responseHandler(err, false);\n      });\n    },\n    async registerFifsName() {\n      const address = this.account.address;\n      const web3 = this.web3;\n      const data = await this.registrarContract.methods\n        .register(this.labelHash, address)\n        .encodeABI();\n      const registerTx = {\n        from: address,\n        value: 0,\n        to: this.registrarAddress,\n        data: data\n      };\n      const setResolverTx = {\n        from: address,\n        to: this.network.type.ens.registry,\n        data: this.ensRegistryContract.methods\n          .setResolver(this.nameHash, this.publicResolverAddress)\n          .encodeABI(),\n        value: 0,\n        gasPrice: new BigNumber(unit.toWei(this.gasPrice, 'gwei')).toFixed()\n      };\n      web3.mew\n        .sendBatchTransactions([registerTx, setResolverTx].filter(Boolean))\n        .catch(err => {\n          Toast.responseHandler(err, false);\n        });\n    },\n    async getRegistrarAddress(tld) {\n      const registrarAddress = await this.ens.owner(tld);\n      return registrarAddress;\n    },\n    async checkDomain() {\n      const supportedTlds = this.network.type.ens.supportedTld;\n      const isSupported = supportedTlds.find(item => {\n        return item === this.parsedTld;\n      });\n      this.loading = true;\n      const web3 = this.web3;\n      this.labelHash = web3.utils.sha3(this.parsedHostName);\n      this.nameHash = nameHashPckg.hash(this.parsedDomainName);\n      const resolver = await this.ens.resolver('resolver.eth');\n      this.publicResolverAddress = await resolver.addr();\n\n      if (this.parsedTld !== '' && isSupported === undefined) {\n        const toastText = this.$t('ens.error.domain-tld-not-supported', {\n          parsedTld: this.parsedTld\n        });\n        Toast.responseHandler(toastText, Toast.ERROR);\n        this.loading = false;\n      } else if (this.parsedTld === this.registrarTLD) {\n        try {\n          if (\n            this.registrarType === REGISTRAR_TYPES.FIFS &&\n            !this.isSubDomain\n          ) {\n            const expiryTime = await this.registrarContract.methods\n              .expiryTimes(this.labelHash)\n              .call();\n            const isAvailable = expiryTime * 1000 < new Date().getTime();\n            if (isAvailable) {\n              this.$router.push({ path: 'manage-ens/fifs' });\n              this.loading = false;\n            } else {\n              this.getMoreInfo();\n              this.loading = false;\n            }\n          } else if (\n            this.registrarType === REGISTRAR_TYPES.PERMANENT &&\n            !this.isSubDomain\n          ) {\n            if (!this.isPermanentLive) {\n              const toastText = this.$t('ens.error.permanent-not-available');\n              Toast.responseHandler(toastText, Toast.ERROR);\n              return;\n            }\n            const isAvailable = await this.registrarControllerContract.methods\n              .available(this.parsedHostName)\n              .call();\n            if (!isAvailable) this.getMoreInfo();\n            else {\n              this.generateKeyPhrase();\n              this.$router.push({ path: 'manage-ens/create-commitment' });\n              this.loading = false;\n            }\n          } else if (this.isSubDomain) {\n            const owner = await this.ens.owner(this.parsedDomainName);\n            if (owner === '0x0000000000000000000000000000000000000000') {\n              Toast.responseHandler('This subdomain is not owned', Toast.WARN);\n            } else {\n              this.getMoreInfo();\n            }\n          }\n        } catch (e) {\n          Toast.responseHandler(e, false);\n          this.loading = false;\n        }\n      } else {\n        try {\n          const registrarAddr = await this.ens.owner(this.parsedTld);\n          this.dnsRegistrar = new DNSRegistrar(\n            this.web3.currentProvider,\n            registrarAddr\n          );\n          this.dnsClaim = await this.dnsRegistrar.claim(this.parsedDomainName);\n          const _owner = await this.ens.owner(this.parsedDomainName);\n          const isInNewRegistry = await this.ensRegistryContract.methods\n            .recordExists(nameHashPckg.hash(this.parsedDomainName))\n            .call();\n          if (this.dnsClaim.result.found && !isInNewRegistry) {\n            this.dnsOwner = this.dnsClaim.getOwner();\n            this.processDNSresult('dnsClaimable'); // reclaim in new registry\n          } else if (\n            this.dnsClaim.result.found &&\n            this.dnsClaim.getOwner().toLowerCase() === _owner.toLowerCase()\n          ) {\n            this.getMoreInfo();\n          } else if (this.dnsClaim.result.found) {\n            this.dnsOwner = this.dnsClaim.getOwner();\n            this.processDNSresult('dnsClaimable'); // Claimable\n          } else if (this.dnsClaim.result.nsec) {\n            this.owner = _owner;\n            this.processDNSresult('dnsMissingTXT'); // TXT missing/unclaim\n          } else {\n            this.processDNSresult('dnsNotSetup'); // DNSEC not setup properly\n          }\n        } catch (e) {\n          this.loading = false;\n          const toastText = this.$t('ens.error.something-went-wrong');\n          Toast.responseHandler(toastText, Toast.ERROR);\n        }\n      }\n    },\n    async createCommitment() {\n      const utils = this.web3.utils;\n      try {\n        const commitment = await this.registrarControllerContract.methods\n          .makeCommitmentWithConfig(\n            this.parsedHostName,\n            this.account.address,\n            utils.sha3(this.secretPhrase),\n            this.publicResolverAddress,\n            this.account.address\n          )\n          .call();\n        this.minimumAge = await this.registrarControllerContract.methods\n          .minCommitmentAge()\n          .call();\n        this.minimumAge = `${parseInt(this.minimumAge) + 30}`;\n        await this.registrarControllerContract.methods\n          .commit(commitment)\n          .send({ from: this.account.address })\n          .once('transactionHash', () => {\n            this.$router.push({ path: 'permanent-registration' });\n          })\n          .on('receipt', () => {\n            this.loading = false;\n            this.commitmentCreated = true;\n          });\n      } catch (e) {\n        this.loading = false;\n        Toast.responseHandler(e, Toast.ERROR);\n      }\n    },\n    async registerWithDuration() {\n      const utils = this.web3.utils;\n      this.loading = true;\n      const SECONDS_YEAR = 60 * 60 * 24 * 365.25;\n      const duration = Math.ceil(SECONDS_YEAR * this.duration);\n      try {\n        const toastRecieptText = this.$t('ens.toast.success-register');\n        const rentPrice = await this.registrarControllerContract.methods\n          .rentPrice(this.parsedHostName, duration)\n          .call();\n        this.registrarControllerContract.methods\n          .registerWithConfig(\n            this.parsedHostName,\n            this.account.address,\n            duration,\n            utils.sha3(this.secretPhrase),\n            this.publicResolverAddress,\n            this.account.address\n          )\n          .send({ from: this.account.address, value: rentPrice })\n          .once('transactionHash', () => {\n            this.$router.push({ path: 'registration-in-progress' });\n          })\n          .once('receipt', () => {\n            this.getMoreInfo();\n            Toast.responseHandler(toastRecieptText, Toast.SUCCESS);\n          });\n      } catch (e) {\n        this.loading = false;\n        const toastText = this.$t('ens.error.something-went-wrong');\n        Toast.responseHandler(toastText, Toast.ERROR);\n      }\n    },\n    async claimFunc() {\n      this.loading = true;\n      try {\n        await this.dnsClaim.submit({\n          from: this.account.address\n        });\n        this.loading = false;\n      } catch (e) {\n        this.loading = false;\n        const toastText = this.$t('ens.error.something-went-wrong');\n        Toast.responseHandler(toastText, Toast.ERROR);\n      }\n    },\n    updateStep(val) {\n      this.step = val;\n    },\n    processDNSresult(type) {\n      this.loading = false;\n      switch (type) {\n        case 'dnsOwned':\n          this.$router.push({ path: 'manage-ens/dns-owned' });\n          break;\n        case 'dnsClaimable':\n          this.$router.push({ path: 'manage-ens/claim' });\n          break;\n        case 'dnsNotSetup':\n          this.$router.push({ path: 'manage-ens/dns-error' });\n          break;\n        case 'dnsMissingTXT':\n          this.$router.push({ path: 'manage-ens/no-txt-setup' });\n          break;\n      }\n    },\n    updateDomainName(value) {\n      try {\n        this.domainName = normalise(value);\n      } catch (e) {\n        Toast.responseHandler(e, Toast.WARN);\n        this.domainNameErr = true;\n        return;\n      }\n      if (this.parsedTld === this.registrarTLD) {\n        this.domainNameErr =\n          value.substr(0, 2) === '0x' || this.parsedHostName.length < 3;\n      } else {\n        this.domainNameErr = false;\n      }\n    },\n    async getMoreInfo() {\n      let owner;\n      try {\n        if (\n          this.registrarType === REGISTRAR_TYPES.PERMANENT &&\n          this.parsedTld === this.registrarTLD &&\n          !this.isSubDomain\n        ) {\n          owner = await this.registrarContract.methods\n            .ownerOf(this.labelHash)\n            .call();\n        } else {\n          owner = await this.ens.owner(this.parsedDomainName);\n        }\n      } catch (e) {\n        owner = '0x';\n        Toast.responseHandler(e, false);\n      }\n      try {\n        const publicResolverContract = new this.web3.eth.Contract(\n          ResolverAbi,\n          this.publicResolverAddress\n        );\n        this.resolverMultiCoinSupport = await publicResolverContract.methods\n          .supportsInterface(MULTICOIN_SUPPORT_INTERFACE)\n          .call();\n      } catch (e) {\n        this.resolverMultiCoinSupport = false;\n      }\n      try {\n        const currentResolverAddress = await this.ensRegistryContract.methods\n          .resolver(this.nameHash)\n          .call();\n        const resolverContract = new this.web3.eth.Contract(\n          ResolverAbi,\n          currentResolverAddress\n        );\n        this.fetchTxtRecords(resolverContract);\n        const supportMultiCoin = await resolverContract.methods\n          .supportsInterface(MULTICOIN_SUPPORT_INTERFACE)\n          .call();\n        for (const type in this.supportedCoins)\n          this.supportedCoins[type].value = '';\n        if (supportMultiCoin) {\n          const promises = [];\n          const coinTypes = Object.keys(this.supportedCoins);\n          coinTypes.forEach(type => {\n            promises.push(\n              this.ens\n                .resolver(this.parsedDomainName, ResolverAbi)\n                .addr(this.supportedCoins[type].id)\n            );\n          });\n          await Promise.all(promises).then(vals => {\n            vals.forEach((address, idx) => {\n              if (address) {\n                this.supportedCoins[coinTypes[idx]].value = this.supportedCoins[\n                  coinTypes[idx]\n                ].encode(new Buffer(address.replace('0x', ''), 'hex'));\n              }\n            });\n          });\n        } else {\n          this.supportedCoins.ETH.value = await this.ens\n            .resolver(this.parsedDomainName)\n            .addr();\n        }\n      } catch (e) {\n        this.supportedCoins.ETH.value = '0x';\n      }\n      this.owner = owner;\n      if (this.$route.fullPath === '/interface/dapps/manage-ens') {\n        this.$router.push({ path: 'manage-ens/owned' });\n      } else {\n        this.$router.push({ path: 'owned' });\n      }\n      this.loading = false;\n    },\n    async fetchTxtRecords(resolver) {\n      this.checkIfController();\n      try {\n        const supportsTxt = await resolver.methods\n          .supportsInterface(TEXT_RECORD_SUPPORT_INTERFACE)\n          .call();\n        this.resolverTxtSupport = supportsTxt;\n        if (supportsTxt) {\n          this.recordContract = resolver;\n          const promises = [];\n          this.supportedTxt.forEach(txt => {\n            promises.push(\n              resolver.methods.text(this.nameHash, txt.name).call()\n            );\n          });\n          Promise.all(promises).then(vals => {\n            vals.forEach((val, idx) => {\n              this.txtRecords[this.supportedTxt[idx].name] = val;\n            });\n          });\n        } else {\n          throw new Error('not supported');\n        }\n      } catch (e) {\n        this.recordContract = {};\n        this.txtRecords = {};\n        this.resolverTxtSupport = false;\n      }\n    },\n    async setRecord(obj) {\n      for (const _record in obj) {\n        this.txtRecords[_record] = obj[_record];\n      }\n      const isMigrate = await this.resolverMigrateAndSet();\n      if (isMigrate) return;\n      const address = this.account.address;\n      const resolverAddr = this.publicResolverAddress;\n      const contract = this.recordContract;\n      const multicalls = [];\n      for (const i in obj) {\n        multicalls.push(\n          contract.methods\n            .setText(this.nameHash, i.toLowerCase(), obj[i])\n            .encodeABI()\n        );\n      }\n\n      const tx = {\n        from: address,\n        to: resolverAddr,\n        data: contract.methods.multicall(multicalls).encodeABI(),\n        gasPrice: new BigNumber(unit.toWei(this.gasPrice, 'gwei')).toFixed(),\n        value: 0\n      };\n      this.web3.eth.sendTransaction(tx);\n    },\n    updateSecretPhrase(e) {\n      this.secretPhrase = e;\n    },\n    updateDuration(e) {\n      this.duration = e;\n    },\n    generateKeyPhrase() {\n      const wordsArray = [];\n      const min = 0;\n      const max = bip39.wordlists.EN.length;\n\n      for (let i = 0; i < 3; i++) {\n        wordsArray.push(\n          bip39.wordlists.EN[Math.floor(Math.random() * (max - min + 1)) + min]\n        );\n      }\n\n      this.secretPhrase = wordsArray.join(' ');\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import 'ManageENS.scss';\n</style>\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"manage-ens-container\"},[_c('back-button'),_c('router-view',{attrs:{\"contract-initiated\":_vm.contractInitiated,\"check-domain\":_vm.checkDomain,\"secret-phrase\":_vm.secretPhrase,\"host-name\":_vm.parsedHostName,\"domain-name\":_vm.parsedDomainName,\"loading\":_vm.loading,\"name-hash\":_vm.nameHash,\"label-hash\":_vm.labelHash,\"owner\":_vm.owner,\"deed-owner\":_vm.deedOwner,\"raw\":_vm.raw,\"step\":_vm.step,\"domain-name-err\":_vm.domainNameErr,\"generate-key-phrase\":_vm.generateKeyPhrase,\"set-multi-coin\":_vm.setMultiCoin,\"transfer-domain\":_vm.transferDomain,\"tld\":_vm.parsedTld === '' ? _vm.network.type.ens.registrarTLD : _vm.parsedTld,\"network-name\":_vm.network.type.name,\"register-fifs-name\":_vm.registerFifsName,\"multi-tld\":_vm.multiTld,\"claim-func\":_vm.claimFunc,\"dns-owner\":_vm.dnsOwner,\"dns-claim\":_vm.dnsClaim,\"create-commitment\":_vm.createCommitment,\"register-with-duration\":_vm.registerWithDuration,\"minimum-age\":_vm.minimumAge,\"commitment-created\":_vm.commitmentCreated,\"resolver-multi-coin-support\":_vm.resolverMultiCoinSupport,\"resolver-txt-support\":_vm.resolverTxtSupport,\"supported-coins\":_vm.supportedCoins,\"txt-records\":_vm.txtRecords,\"set-record\":_vm.setRecord,\"usd\":_vm.usd,\"is-controller\":_vm.isController,\"set-controller\":_vm.setController},on:{\"updateSecretPhrase\":_vm.updateSecretPhrase,\"domainNameChange\":_vm.updateDomainName,\"updateStep\":_vm.updateStep,\"updateDuration\":_vm.updateDuration}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ManageENS.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ManageENS.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ManageENS.vue?vue&type=template&id=784622fa&scoped=true&\"\nimport script from \"./ManageENS.vue?vue&type=script&lang=js&\"\nexport * from \"./ManageENS.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ManageENS.vue?vue&type=style&index=0&id=784622fa&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"784622fa\",\n  null\n  \n)\n\nexport default component.exports","const registrarController = [\n  {\n    constant: false,\n    inputs: [],\n    name: 'renounceOwnership',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: '',\n        type: 'bytes32'\n      }\n    ],\n    name: 'commitments',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'MIN_REGISTRATION_DURATION',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'minCommitmentAge',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'owner',\n    outputs: [\n      {\n        name: '',\n        type: 'address'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'isOwner',\n    outputs: [\n      {\n        name: '',\n        type: 'bool'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'maxCommitmentAge',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: 'newOwner',\n        type: 'address'\n      }\n    ],\n    name: 'transferOwnership',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [\n      {\n        name: '_base',\n        type: 'address'\n      },\n      {\n        name: '_prices',\n        type: 'address'\n      },\n      {\n        name: '_minCommitmentAge',\n        type: 'uint256'\n      },\n      {\n        name: '_maxCommitmentAge',\n        type: 'uint256'\n      }\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'constructor'\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        name: 'name',\n        type: 'string'\n      },\n      {\n        indexed: true,\n        name: 'label',\n        type: 'bytes32'\n      },\n      {\n        indexed: true,\n        name: 'owner',\n        type: 'address'\n      },\n      {\n        indexed: false,\n        name: 'cost',\n        type: 'uint256'\n      },\n      {\n        indexed: false,\n        name: 'expires',\n        type: 'uint256'\n      }\n    ],\n    name: 'NameRegistered',\n    type: 'event'\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        name: 'name',\n        type: 'string'\n      },\n      {\n        indexed: true,\n        name: 'label',\n        type: 'bytes32'\n      },\n      {\n        indexed: false,\n        name: 'cost',\n        type: 'uint256'\n      },\n      {\n        indexed: false,\n        name: 'expires',\n        type: 'uint256'\n      }\n    ],\n    name: 'NameRenewed',\n    type: 'event'\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: 'oracle',\n        type: 'address'\n      }\n    ],\n    name: 'NewPriceOracle',\n    type: 'event'\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: 'previousOwner',\n        type: 'address'\n      },\n      {\n        indexed: true,\n        name: 'newOwner',\n        type: 'address'\n      }\n    ],\n    name: 'OwnershipTransferred',\n    type: 'event'\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'name',\n        type: 'string'\n      },\n      {\n        name: 'duration',\n        type: 'uint256'\n      }\n    ],\n    name: 'rentPrice',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'name',\n        type: 'string'\n      }\n    ],\n    name: 'valid',\n    outputs: [\n      {\n        name: '',\n        type: 'bool'\n      }\n    ],\n    payable: false,\n    stateMutability: 'pure',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'name',\n        type: 'string'\n      }\n    ],\n    name: 'available',\n    outputs: [\n      {\n        name: '',\n        type: 'bool'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'name',\n        type: 'string'\n      },\n      {\n        name: 'owner',\n        type: 'address'\n      },\n      {\n        name: 'secret',\n        type: 'bytes32'\n      }\n    ],\n    name: 'makeCommitment',\n    outputs: [\n      {\n        name: '',\n        type: 'bytes32'\n      }\n    ],\n    payable: false,\n    stateMutability: 'pure',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'name',\n        type: 'string'\n      },\n      {\n        name: 'owner',\n        type: 'address'\n      },\n      {\n        name: 'secret',\n        type: 'bytes32'\n      },\n      {\n        name: 'resolver',\n        type: 'address'\n      },\n      {\n        name: 'addr',\n        type: 'address'\n      }\n    ],\n    name: 'makeCommitmentWithConfig',\n    outputs: [\n      {\n        name: '',\n        type: 'bytes32'\n      }\n    ],\n    payable: false,\n    stateMutability: 'pure',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: 'commitment',\n        type: 'bytes32'\n      }\n    ],\n    name: 'commit',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: 'name',\n        type: 'string'\n      },\n      {\n        name: 'owner',\n        type: 'address'\n      },\n      {\n        name: 'duration',\n        type: 'uint256'\n      },\n      {\n        name: 'secret',\n        type: 'bytes32'\n      }\n    ],\n    name: 'register',\n    outputs: [],\n    payable: true,\n    stateMutability: 'payable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: 'name',\n        type: 'string'\n      },\n      {\n        name: 'owner',\n        type: 'address'\n      },\n      {\n        name: 'duration',\n        type: 'uint256'\n      },\n      {\n        name: 'secret',\n        type: 'bytes32'\n      },\n      {\n        name: 'resolver',\n        type: 'address'\n      },\n      {\n        name: 'addr',\n        type: 'address'\n      }\n    ],\n    name: 'registerWithConfig',\n    outputs: [],\n    payable: true,\n    stateMutability: 'payable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: 'name',\n        type: 'string'\n      },\n      {\n        name: 'duration',\n        type: 'uint256'\n      }\n    ],\n    name: 'renew',\n    outputs: [],\n    payable: true,\n    stateMutability: 'payable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: '_prices',\n        type: 'address'\n      }\n    ],\n    name: 'setPriceOracle',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: '_minCommitmentAge',\n        type: 'uint256'\n      },\n      {\n        name: '_maxCommitmentAge',\n        type: 'uint256'\n      }\n    ],\n    name: 'setCommitmentAges',\n    outputs: [\n      {\n        name: '',\n        type: 'bool'\n      }\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: 'withdraw',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'interfaceID',\n        type: 'bytes4'\n      }\n    ],\n    name: 'supportsInterface',\n    outputs: [\n      {\n        name: '',\n        type: 'bool'\n      }\n    ],\n    payable: false,\n    stateMutability: 'pure',\n    type: 'function'\n  }\n];\n\nexport default registrarController;\n","export default [\n  {\n    constant: true,\n    inputs: [],\n    name: 'ens',\n    outputs: [\n      {\n        name: '',\n        type: 'address'\n      }\n    ],\n    payable: false,\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: '',\n        type: 'bytes32'\n      }\n    ],\n    name: 'expiryTimes',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256'\n      }\n    ],\n    payable: false,\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: 'subnode',\n        type: 'bytes32'\n      },\n      {\n        name: 'owner',\n        type: 'address'\n      }\n    ],\n    name: 'register',\n    outputs: [],\n    payable: false,\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'rootNode',\n    outputs: [\n      {\n        name: '',\n        type: 'bytes32'\n      }\n    ],\n    payable: false,\n    type: 'function'\n  },\n  {\n    inputs: [\n      {\n        name: 'ensAddr',\n        type: 'address'\n      },\n      {\n        name: 'node',\n        type: 'bytes32'\n      }\n    ],\n    type: 'constructor'\n  }\n];\n"],"sourceRoot":""}