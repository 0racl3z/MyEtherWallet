{"version":3,"sources":["webpack:///./src/dapps/MakerDai/makerHelpers/locateCdps.js","webpack:///./src/dapps/MakerDai/makerHelpers/addressesMAIN.js","webpack:///./src/dapps/MakerDai/MakerCDP/constants.js","webpack:///./src/dapps/MakerDai/MakerCDP/daiMath.js","webpack:///./src/dapps/MakerDai/MakerCDP/MakerCdpBase.js","webpack:///./src/dapps/MakerDai/MakerCDP/MakerCDP.js","webpack:///./src/dapps/MakerDai/MakerCDP/index.js","webpack:///./src/dapps/MakerDai/makerHelpers/setups.js","webpack:///./src/dapps/MakerDai/makerHelpers/currencyHelper.js","webpack:///./src/dapps/MakerDai/makerHelpers/ABIs/migrateABI.js","webpack:///./src/dapps/MakerDai/makerHelpers/ABIs/ERC20Token.abi.js","webpack:///./src/dapps/MakerDai/makerHelpers/ABIs/GetCdps.js","webpack:///./src/dapps/MakerDai/makerHelpers/ABIs/ProxyRegistry.js","webpack:///./src/dapps/MakerDai/makerHelpers/ABIs/DssCdpManager.js","webpack:///./src/dapps/MakerDai/makerHelpers/ABIs/Spotter.js","webpack:///./src/dapps/MakerDai/makerHelpers/ABIs/Vat.js","webpack:///./src/dapps/MakerDai/makerHelpers/helpers.js","webpack:///./src/dapps/MakerDai/MakerCDP/chainCalls.js","webpack:///./src/dapps/MakerDai/makerHelpers/chainCalls.js"],"names":["locateCdps","self","cdpsWithoutProxy","cdps","proxyAddress","getCdpIds","web3","allCdpIds","map","entry","id","cdpIdToTypeMapping","reduce","acc","cur","ilk","cdpsWithType","withType","withProxy","withoutProxy","locateOldCdps","_cdpService","locateCdpsWithoutProxy","locateCdpsProxy","account","address","directCdps","toChecksumAddress","directCdpsCheckSum","concat","getProxy","DEPLOYER","MULTICALL","FAUCET","MCD_DEPLOY","MCD_GOV","MCD_ADM","MCD_VAT","MCD_JUG","MCD_CAT","MCD_VOW","MCD_JOIN_DAI","MCD_FLAP","MCD_FLOP","MCD_PAUSE","MCD_PAUSE_PROXY","MCD_GOV_ACTIONS","MCD_DAI","MCD_SPOT","MCD_POT","MCD_END","MCD_ESM","PROXY_ACTIONS","PROXY_ACTIONS_END","PROXY_ACTIONS_DSR","CDP_MANAGER","GET_CDPS","PROXY_FACTORY","PROXY_REGISTRY","ETH","VAL_ETH","PIP_ETH","MCD_JOIN_ETH_A","MCD_FLIP_ETH_A","BAT","VAL_BAT","PIP_BAT","MCD_JOIN_BAT_A","MCD_FLIP_BAT_A","SAI","PIP_SAI","MCD_JOIN_SAI","MCD_FLIP_SAI","PROXY_PAUSE_ACTIONS","PROXY_DEPLOYER","SAI_TUB","MIGRATION","MIGRATION_PROXY_ACTIONS","defaultIlk","BigNumber","USD","createCurrency","MDAI","collateralValue","collateralAmount","price","times","debtValue","art","rate","wei","shiftedBy","collateralizationRatio","eq","ratio","createCurrencyRatio","Infinity","div","liquidationPrice","liquidationRatio","type","minSafeCollateralAmount","toBigNumber","num","MakerCdpBase","cdpId","services","sysVars","this","cdpIdFull","cdp","ready","doUpdate","noProxy","cdpType","needsUpdate","closing","opening","migrated","migrateCdpActive","migrateCdpStage","cdpTypeObject","_mcdManager","get","getCdpType","mcdCurrencies","_liqPrice","isSafe","_collatRatio","pethCollateral","_usdCollateral","_governanceFee","tokenMapping","i","_typeService","cdpTypes","length","currency","symbol","name","override","afterInitialization","amount","toUsd","currentPrice","lt","toFixed","ROUND_DOWN","replace","cdpCollateralType","_amount","toString","_collateralAmount","e","_collateralAvailable","collateralAvailable","gte","plus","lte","_collateralValue","daiMath","_collateralizationRatio","_debtValue","getTokens","daiBalance","dustValues","ethPrice","_ethCollateral","tokens","hasProxy","liquidationPenalty","rawType","mcdManager","_liquidationRatio","Object","keys","_liquidationPrice","maxDai","minus","pethPrice","zeroDebt","maxPethDraw","pethMin","tl","tr","toUSD","_mkrToken","mkrBalance","minEth","_proxyAddress","_proxyService","proxyAllowances","_pethPrice","annualStabilityFee","_tokenService","wethToPethRatio","ethCollateral","val","isBigNumber","toNumber","raw","decimals","round","displayFixedValue","DAI","Maker","MakerCDP","minDai","DAI_NAME","updateValues","getGovernanceFee","toUpdate","getMakerCdp","getValuesFromChain","console","error","getUrns","urns","value","ink","proxyService","currentProxy","cdpService","give","approveUnlimited","daiToken","mkrToken","ethQty","daiQty","getPriceOfCurrency","calcCollatRatio","changeAmountOnly","calcLiquidationPrice","getProxyAddress","push","denominator","pow","enoughMkrToWipe","getCombinedDebtValue","balances","contract","eth","Contract","ERC20","addresses","methods","allowance","currentAddress","call","getEventHistory","curr","balance","isNaN","_ethQty","ethUnit","toWei","getBalanceOf","currentAllowance","getProxyAllowancefor","convertToTokenWei","bnOver","minDeposit","getCurrentPriceFor","toPeth","ensureProxy","needToFinishMigrating","openLockAndDraw","getMakerCurrencies","newCdp","getOwner","owner","lock","acknowledgeBypass","gt","drawDai","freeCollateral","max","wipeAll","wipeDai","shutProxy","log","proxy","giveToProxy","ServiceRoles","PRICE","CDP","PROXY","TOKEN","CDP_TYPE","AUCTION","SYSTEM_DATA","QUERY_API","SAVINGS","setupServices","maker","_priceService","service","Promise","all","result","_mcdSaving","setupPriceAndRatios","getEthPrice","getPethPrice","getLiquidationRatio","getLiquidationPenalty","getAnnualGovernanceFee","getWethToPethRatio","_targetPrice","stabilityFee","getDetailsForTokens","collateralTokens","getToken","then","res","MKR","token","getDustValues","getDustValue","checkAllowances","_contract","collateralOptions","setupCdpManage","includes","activeValues","systemValues","currentCdpId","getValuesForManage","bind","currentCdp","activeCdps","maxEthDraw","maxUsdDraw","usdCollateral","collateralRatio","collatRatio","governanceFeeOwed","ethCollateralNum","loadCdpDetails","buildCdpObject","loadCdpDetail","updateActiveCdp","removeObject","hasOwnProperty","currentCdpIds","newCdps","filter","item","newCdpsWithoutProxy","removedCdps","parseInt","forEach","buildEmpty","options","useOld","_daiToken","priceService","makerCDP","init","Toast","afterClose","afterOpen","$route","checkBalances","idProp","update","updateSystemVariables","setupCdpManageFunc","runAfterUpdate","afterUpdate","fn","pop","creatingCdp","goToManage","goToSave","gotoCreate","responseHandler","$t","INFO","valuesUpdated","vals","TKNS","constant","inputs","outputs","internalType","payable","stateMutability","anonymous","indexed","bignumber","displayFixed","displayPercentValue","finiteCheck","roundUp","isFinite","ROUND_UP","displayFixedPercent","CdpNum","undefined","one","two","three","getInt","atValue","padRight","string","chars","sign","Array","join","toHex","str","with0x","rightPadding","charCodeAt","stringToBytes","Buffer","from","Vat","ilks","CdpManager","vat","urn","bytesToString","hex","GetCdps","getCdpsDesc","results","ids","assert","collected","index"],"mappings":"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","file":"js/chunk-85e6120e.3efdeae4.js","sourcesContent":["import { toChecksumAddress } from '@/helpers/addressUtils';\nimport { getCdpIds } from './chainCalls';\n\nasync function locateCdps(self) {\n  self.cdpsWithoutProxy = [];\n  self.cdps = [];\n  let cdps = [];\n  if (self.proxyAddress) {\n    cdps = await getCdpIds(self.web3, self.proxyAddress);\n  }\n\n  self.allCdpIds = [...cdps].map(entry =>\n    typeof entry !== 'number' ? entry.id : entry\n  );\n\n  const cdpIdToTypeMapping = [...cdps].reduce((acc, cur) => {\n    acc[cur.id] = cur.ilk;\n    return acc;\n  }, {});\n  self.cdpsWithType = cdpIdToTypeMapping;\n  return {\n    withType: cdpIdToTypeMapping,\n    withProxy: cdps.map(entry =>\n      typeof entry !== 'number' ? entry.id : entry\n    ),\n    withoutProxy: []\n  };\n}\n\nasync function locateOldCdps(self, _cdpService) {\n  self.cdpsWithoutProxy = [];\n  const cdpsWithoutProxy = await locateCdpsWithoutProxy(self, _cdpService);\n  self.cdps = [];\n  let cdps = [];\n  if (self.proxyAddress) {\n    cdps = await locateCdpsProxy(self, _cdpService);\n  }\n\n  self.allCdpIds = [...cdpsWithoutProxy, ...cdps].map(entry =>\n    typeof entry !== 'number' ? entry.id : entry\n  );\n\n  const cdpIdToTypeMapping = [...cdpsWithoutProxy, ...cdps].reduce(\n    (acc, cur) => {\n      acc[cur.id] = cur.ilk;\n      return acc;\n    },\n    {}\n  );\n  self.cdpsWithType = cdpIdToTypeMapping;\n  return {\n    withType: cdpIdToTypeMapping,\n    withProxy: cdps.map(entry =>\n      typeof entry !== 'number' ? entry.id : entry\n    ),\n    withoutProxy: cdpsWithoutProxy.map(entry =>\n      typeof entry !== 'number' ? entry.id : entry\n    )\n  };\n}\n\nasync function locateCdpsWithoutProxy(self, _cdpService) {\n  const directCdps = await _cdpService.getCdpIds(self.account.address);\n  const directCdpsCheckSum = await _cdpService.getCdpIds(\n    toChecksumAddress(self.account.address)\n  );\n  return directCdps.concat(directCdpsCheckSum);\n}\n\nasync function locateCdpsProxy(self, _cdpService) {\n  self.proxyAddress = await self.getProxy();\n  return await _cdpService.getCdpIds(self.proxyAddress);\n}\n\nexport { locateCdps, locateOldCdps, locateCdpsWithoutProxy, locateCdpsProxy };\n","export default {\n  DEPLOYER: '0xdDb108893104dE4E1C6d0E47c42237dB4E617ACc',\n  MULTICALL: '0x5e227ad1969ea493b43f840cff78d08a6fc17796',\n  FAUCET: '0x0000000000000000000000000000000000000000',\n  MCD_DEPLOY: '0xbaa65281c2fa2baacb2cb550ba051525a480d3f4',\n  MCD_GOV: '0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2',\n  MCD_ADM: '0x9eF05f7F6deB616fd37aC3c959a2dDD25A54E4F5',\n  MCD_VAT: '0x35d1b3f3d7966a1dfe207aa4514c12a259a0492b',\n  MCD_JUG: '0x19c0976f590d67707e62397c87829d896dc0f1f1',\n  MCD_CAT: '0x78f2c2af65126834c51822f56be0d7469d7a523e',\n  MCD_VOW: '0xa950524441892a31ebddf91d3ceefa04bf454466',\n  MCD_JOIN_DAI: '0x9759a6ac90977b93b58547b4a71c78317f391a28',\n  MCD_FLAP: '0xdfe0fb1be2a52cdbf8fb962d5701d7fd0902db9f',\n  MCD_FLOP: '0xbe00fe8dfd9c079f1e5f5ad7ae9a3ad2c571fcac',\n  MCD_PAUSE: '0xbe286431454714f511008713973d3b053a2d38f3',\n  MCD_PAUSE_PROXY: '0xbe8e3e3618f7474f8cb1d074a26affef007e98fb',\n  MCD_GOV_ACTIONS: '0x4f5f0933158569c026d617337614d00ee6589b6e',\n  MCD_DAI: '0x6b175474e89094c44da98b954eedeac495271d0f',\n  MCD_SPOT: '0x65c79fcb50ca1594b025960e539ed7a9a6d434a3',\n  MCD_POT: '0x197e90f9fad81970ba7976f33cbd77088e5d7cf7',\n  MCD_END: '0xab14d3ce3f733cacb76ec2abe7d2fcb00c99f3d5',\n  MCD_ESM: '0x0581a0abe32aae9b5f0f68defab77c6759100085',\n  PROXY_ACTIONS: '0x82ecd135dce65fbc6dbdd0e4237e0af93ffd5038',\n  PROXY_ACTIONS_END: '0x069b2fb501b6f16d1f5fe245b16f6993808f1008',\n  PROXY_ACTIONS_DSR: '0x07ee93aeea0a36fff2a9b95dd22bd6049ee54f26',\n  CDP_MANAGER: '0x5ef30b9986345249bc32d8928b7ee64de9435e39',\n  GET_CDPS: '0x36a724bd100c39f0ea4d3a20f7097ee01a8ff573',\n  PROXY_FACTORY: '0xa26e15c895efc0616177b7c1e7270a4c7d51c997',\n  PROXY_REGISTRY: '0x4678f0a6958e4d2bc4f1baf7bc52e8f3564f3fe4',\n  ETH: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n  VAL_ETH: '0x81fe72b5a8d1a857d176c3e7d5bd2679a9b85763',\n  PIP_ETH: '0x81fe72b5a8d1a857d176c3e7d5bd2679a9b85763',\n  MCD_JOIN_ETH_A: '0x2f0b23f53734252bda2277357e97e1517d6b042a',\n  MCD_FLIP_ETH_A: '0xd8a04f5412223f513dc55f839574430f5ec15531',\n  BAT: '0x0d8775f648430679a709e98d2b0cb6250d2887ef',\n  VAL_BAT: '0xb4eb54af9cc7882df0121d26c5b97e802915abe6',\n  PIP_BAT: '0xb4eb54af9cc7882df0121d26c5b97e802915abe6',\n  MCD_JOIN_BAT_A: '0x3d0b1912b66114d4096f48a8cee3a56c231772ca',\n  MCD_FLIP_BAT_A: '0xaa745404d55f88c108a28c86abe7b5a1e7817c07',\n  SAI: '0x89d24a6b4ccb1b6faa2625fe562bdd9a23260359',\n  PIP_SAI: '0x54003dbf6ae6cba6ddae571ccdc34d834b44ab1e',\n  MCD_JOIN_SAI: '0xad37fd42185ba63009177058208dd1be4b136e6b',\n  MCD_FLIP_SAI: '0x5432b2f3c0dff95aa191c45e5cbd539e2820ae72',\n  PROXY_PAUSE_ACTIONS: '0x6bda13d43b7edd6cafe1f70fb98b5d40f61a1370',\n  PROXY_DEPLOYER: '0x1b93556ab8dccef01cd7823c617a6d340f53fb58',\n  SAI_TUB: '0x448a5065aebb8e423f0896e6c5d525c040f59af3',\n  MIGRATION: '0xc73e0383f3aff3215e6f04b0331d58cecf0ab849',\n  MIGRATION_PROXY_ACTIONS: '0xe4b22d484958e582098a98229a24e8a43801b674'\n};\n","import BigNumber from 'bignumber.js';\n\nexport const ServiceRoles = {\n  CDP_MANAGER: 'mcd:cdpManager',\n  CDP_TYPE: 'mcd:cdpType',\n  AUCTION: 'mcd:auction',\n  SYSTEM_DATA: 'mcd:systemData',\n  QUERY_API: 'mcd:queryApi',\n  SAVINGS: 'mcd:savings'\n};\n\nexport const WAD = new BigNumber('1e18');\nexport const RAY = new BigNumber('1e27');\nexport const RAD = new BigNumber('1e45');\nexport const defaultIlk = 'ETH-A';\n\nexport const SECONDS_PER_YEAR = 365 * 24 * 60 * 60;\n","import BigNumber from 'bignumber.js';\nimport { createCurrency, createCurrencyRatio } from '@makerdao/currency';\nimport { RAY } from './constants';\nconst USD = createCurrency('USD');\nconst MDAI = createCurrency('MDAI');\n// NOTE: When a function below has an argument with the same name as a function\n// defined earlier in the file, that means it expects that argument's value to\n// be the return value of a call to that earlier function.\n//\n// e.g. the fourth argument of `price`\n\n// ilk math\n\nexport function debtCeiling(line) {\n  return MDAI.rad(line);\n}\n\nexport function liquidationPenalty(chop) {\n  return new BigNumber(chop.toString()).dividedBy(RAY).minus(1).toNumber();\n}\n\nexport function liquidationRatio(mat) {\n  const ratio = createCurrencyRatio(USD, MDAI);\n  return ratio(new BigNumber(mat.toString()).dividedBy(RAY).toString());\n}\n\nexport function price(currency, par, spot, liquidationRatio) {\n  par = new BigNumber(par.toString()).dividedBy(RAY);\n  spot = new BigNumber(spot.toString()).dividedBy(RAY);\n  const ratio = createCurrencyRatio(USD, currency);\n  const price = spot.times(par).times(liquidationRatio.toNumber());\n  return ratio(price);\n}\n\nconst secondsPerYear = 60 * 60 * 24 * 365;\n\nexport function annualStabilityFee(duty) {\n  duty = new BigNumber(duty.toString()).dividedBy(RAY);\n  BigNumber.config({ POW_PRECISION: 100 });\n  return duty.pow(secondsPerYear).minus(1).toNumber();\n}\n\n// cdp math\n\nexport function collateralAmount(currency, ink) {\n  return currency.wei(ink);\n}\n\nexport function collateralValue(collateralAmount, price) {\n  return collateralAmount.times(price);\n}\n\nexport function debtValue(art, rate) {\n  art = MDAI.wei(art);\n  return art.times(rate).shiftedBy(-27);\n}\n\nexport function collateralizationRatio(collateralValue, debtValue) {\n  if (debtValue.eq(0)) {\n    const ratio = createCurrencyRatio(USD, MDAI);\n    return ratio(Infinity);\n  }\n  return collateralValue.div(debtValue);\n}\n\nexport function liquidationPrice(\n  collateralAmount,\n  debtValue,\n  liquidationRatio\n) {\n  if (collateralAmount.eq(0)) {\n    const ratio = createCurrencyRatio(USD, collateralAmount.type);\n    return ratio(Infinity);\n  }\n  return debtValue.times(liquidationRatio).div(collateralAmount);\n}\n\nexport function minSafeCollateralAmount(debtValue, liquidationRatio, price) {\n  return debtValue.times(liquidationRatio).div(price);\n}\n\nexport function daiAvailable(collateralValue, debtValue, liquidationRatio) {\n  const maxSafeDebtValue = collateralValue.div(liquidationRatio);\n  return debtValue.lt(maxSafeDebtValue)\n    ? MDAI(maxSafeDebtValue.minus(debtValue))\n    : MDAI(0);\n}\n","import BigNumber from 'bignumber.js';\nimport { maxPethDraw, maxDai, displayFixedValue } from '../makerHelpers';\nimport { defaultIlk } from './constants';\n\nimport * as daiMath from './daiMath';\n\nconst toBigNumber = num => {\n  return new BigNumber(num);\n};\n\n// Basically just to hold the various getters and static methods to somewhat de-clutter the implementation\nexport default class MakerCdpBase {\n  constructor(cdpId, web3, services, sysVars) {\n    if (cdpId === null) {\n      this.cdpId = cdpId;\n    } else {\n      this.cdpId = typeof cdpId !== 'number' ? cdpId.id : cdpId;\n    }\n    this.cdpIdFull = cdpId;\n    this.cdp = {};\n    this.web3 = web3 || {};\n    this.ready = false;\n    this.doUpdate = 0;\n    this.cdps = [];\n    this.noProxy = sysVars.noProxy || false;\n    this.sysVars = sysVars; // todo make sure this doesn't bring in the issue with vue walking the tree and breaking things\n    this.cdpType = this.cdpId ? sysVars.cdpsWithType[this.cdpId] : defaultIlk;\n    this.services = services || null;\n    this.needsUpdate = false;\n    this.closing = false;\n    this.opening = false;\n    this.migrated = false;\n    this.migrateCdpActive = false;\n    this.migrateCdpStage = 0;\n    this.cdpTypeObject = services._mcdManager\n      ? services._mcdManager.get('mcd:cdpType').getCdpType(null, this.cdpType)\n      : services.mcdCurrencies['ETH'];\n    this._liqPrice = toBigNumber(0);\n    this.isSafe = false;\n    this._collatRatio = 0;\n    this.pethCollateral = toBigNumber(0);\n    this._usdCollateral = toBigNumber(0);\n    this._governanceFee = toBigNumber(12345);\n\n    this.tokenMapping = {};\n    for (let i = 0; i < services._typeService.cdpTypes.length; i++) {\n      this.tokenMapping[services._typeService.cdpTypes[i].currency.symbol] =\n        services._typeService.cdpTypes[i];\n      this.tokenMapping[services._typeService.cdpTypes[i].currency.name] =\n        services._typeService.cdpTypes[i];\n    }\n\n    this.override = {};\n    this.afterInitialization = false;\n  }\n\n  // Getters\n  get cdpCollateralType() {\n    return this.cdpType.replace(/-[A-Z]/, '');\n  }\n\n  get currentAddress() {\n    return this.services.address;\n  }\n\n  get currentPrice() {\n    return this.mcdCurrencies[this.cdpCollateralType].price._amount.toString();\n  }\n\n  get collatRatio() {\n    return this._collatRatio;\n  }\n\n  get collateralAmount() {\n    try {\n      return this._collateralAmount.toBigNumber();\n    } catch (e) {\n      return '--';\n    }\n  }\n\n  get _collateralAmount() {\n    if (this.override['collateralAmount']) {\n      return this.override['collateralAmount'];\n    }\n    return this.cdp.collateralAmount;\n  }\n\n  get collateralAvailable() {\n    try {\n      return this._collateralAvailable.toBigNumber();\n    } catch (e) {\n      return '--';\n    }\n  }\n\n  get _collateralAvailable() {\n    return this.cdp.collateralAvailable;\n  }\n\n  get collateralStatus() {\n    if (this.collateralizationRatio.gte(this.liquidationRatio.plus(0.5))) {\n      return 'green';\n    } else if (\n      this.collateralizationRatio.gte(this.liquidationRatio.plus(0.25)) &&\n      this.collateralizationRatio.lte(this.liquidationRatio.plus(0.5))\n    ) {\n      return 'orange';\n    }\n    return 'red';\n  }\n\n  get collateralValue() {\n    try {\n      return this._collateralValue.toBigNumber();\n    } catch (e) {\n      return '--';\n    }\n  }\n\n  get _collateralValue() {\n    return daiMath.collateralValue(\n      this._collateralAmount,\n      this.cdpTypeObject.price\n    );\n  }\n\n  get collateralizationRatio() {\n    try {\n      return this._collateralizationRatio.toBigNumber();\n    } catch (e) {\n      return '--';\n    }\n  }\n\n  get _collateralizationRatio() {\n    return daiMath.collateralizationRatio(\n      this._collateralValue,\n      this._debtValue\n    );\n  }\n\n  get cdpService() {\n    return this.services._cdpService;\n  }\n\n  get daiToken() {\n    return this.getTokens['DAI'];\n  }\n\n  get daiBalance() {\n    return this.services.daiBalance;\n  }\n\n  get debtValue() {\n    if (this.cdp) {\n      try {\n        if (this.override['debtValue']) {\n          return this._debtValue.toBigNumber();\n        }\n        return toBigNumber(\n          toBigNumber(this._debtValue.toBigNumber()).toFixed(18)\n        );\n      } catch (e) {\n        return '--';\n      }\n    }\n    return toBigNumber(0);\n  }\n\n  get _debtValue() {\n    if (this.cdp) {\n      if (this.override['debtValue']) {\n        return this.override['debtValue'];\n      }\n      return this.cdp.debtValue;\n    }\n    return toBigNumber(0);\n  }\n\n  get dustValues() {\n    return this.services.dustValues;\n  }\n\n  get ethPrice() {\n    return this.services.ethPrice;\n  }\n\n  get ethCollateral() {\n    try {\n      return this._ethCollateral.toBigNumber();\n    } catch (e) {\n      return '--';\n    }\n  }\n\n  get _ethCollateral() {\n    return this._collateralAmount;\n  }\n\n  getCollateralIlk() {\n    return this.cdpType;\n  }\n\n  get getTokens() {\n    return this.sysVars.tokens;\n  }\n\n  get governanceFeeOwed() {\n    return this._governanceFee;\n  }\n\n  get hasProxy() {\n    return this.services.hasProxy;\n  }\n\n  get liquidationPenalty() {\n    if (this.cdp) {\n      if (this.cdp.type) {\n        return toBigNumber(this.cdp.type.liquidationPenalty);\n      }\n    }\n    const rawType = this.mcdManager\n      .get('mcd:cdpType')\n      .getCdpType(null, this.cdpType);\n\n    return toBigNumber(rawType.liquidationPenalty._amount);\n  }\n\n  get liquidationRatio() {\n    return toBigNumber(this._liquidationRatio._amount);\n  }\n\n  get _liquidationRatio() {\n    if (Object.keys(this.cdp).length > 0) {\n      return this.cdp.type.liquidationRatio;\n    }\n    const rawType = this.mcdManager\n      .get('mcd:cdpType')\n      .getCdpType(null, this.cdpType);\n    return rawType.liquidationRatio;\n  }\n\n  get liquidationPrice() {\n    try {\n      return this._liquidationPrice.toBigNumber();\n    } catch (e) {\n      return '--';\n    }\n  }\n\n  get _liquidationPrice() {\n    return daiMath.liquidationPrice(\n      this._collateralAmount,\n      this._debtValue,\n      this._liquidationRatio\n    );\n  }\n\n  get maxDai() {\n    if (\n      this.currentPrice &&\n      this.collateralAmount &&\n      this.liquidationRatio &&\n      this.debtValue\n    ) {\n      return maxDai(\n        this.currentPrice,\n        this.collateralAmount,\n        this.liquidationRatio.plus(0.001),\n        this.debtValue\n      );\n    }\n    return toBigNumber(0);\n  }\n\n  get maxEthDraw() {\n    return this.collateralAmount.minus(this.minSafeCollateralAmount);\n  }\n\n  get maxPethDraw() {\n    if (this.pethPrice && this.pethCollateral && this.liquidationRatio) {\n      if (this.zeroDebt) {\n        return maxPethDraw(\n          this.pethCollateral,\n          this.liquidationRatio,\n          this.debtValue,\n          this.pethPrice,\n          this.pethMin.times(0)\n        );\n      }\n      return maxPethDraw(\n        this.pethCollateral,\n        this.liquidationRatio,\n        this.debtValue,\n        this.pethPrice\n      );\n    }\n    return toBigNumber(0);\n  }\n\n  get maxDaiDraw() {\n    const tl = toBigNumber(this.currentPrice).times(\n      toBigNumber(this.collateralAmount)\n    );\n    const tr = toBigNumber(this.debtValue).times(\n      toBigNumber(this.liquidationRatio)\n    );\n    return tl.minus(tr).div(toBigNumber(this.currentPrice));\n  }\n\n  get maxUsdDraw() {\n    return this.toUSD(\n      this.collateralAmount.minus(this.minSafeCollateralAmount)\n    );\n  }\n\n  get mcdCurrencies() {\n    return this.services.mcdCurrencies;\n  }\n\n  get mkrToken() {\n    return this.services._mkrToken;\n  }\n\n  get mkrBalance() {\n    return this.services.mkrBalance;\n  }\n\n  get mcdManager() {\n    return this.services._mcdManager;\n  }\n\n  get minSafeCollateralAmount() {\n    const rawType = this.mcdManager\n      .get('mcd:cdpType')\n      .getCdpType(null, this.cdpType);\n    return daiMath\n      .minSafeCollateralAmount(\n        this._debtValue,\n        rawType.liquidationRatio,\n        rawType.price\n      )\n      .toBigNumber();\n  }\n\n  get minEth() {\n    return this.services.minEth;\n  }\n\n  get needToFinishMigrating() {\n    return this._proxyAddress && this.noProxy;\n  }\n\n  get proxyService() {\n    return this.services._proxyService;\n  }\n\n  get proxyAddress() {\n    return this.services._proxyAddress;\n  }\n\n  get proxyAllowanceDai() {\n    return this.services.proxyAllowances['DAI'];\n  }\n\n  get proxyAllowanceMkr() {\n    return this.services.proxyAllowances['MKR'];\n  }\n\n  get pethMin() {\n    return this.services.pethMin;\n  }\n\n  get pethPrice() {\n    return this.services._pethPrice;\n  }\n\n  get stabilityFee() {\n    if (this.cdp) {\n      return toBigNumber(this.cdp.type.annualStabilityFee);\n    }\n    return toBigNumber(0);\n  }\n\n  get tokenService() {\n    return this.services._tokenService;\n  }\n\n  get wethToPethRatio() {\n    return this.services.wethToPethRatio;\n  }\n\n  get usdCollateral() {\n    return this.toUSD(this.ethCollateral);\n  }\n\n  get zeroDebt() {\n    return toBigNumber(this.debtValue).eq(0);\n  }\n\n  // Utility Helpers\n  toUSD(amount) {\n    const toUsd = toBigNumber(this.currentPrice).times(amount);\n\n    if (toUsd.lt(0)) {\n      return toBigNumber(0);\n    }\n    return toUsd.toFixed(2, BigNumber.ROUND_DOWN);\n  }\n\n  // Static Helpers\n\n  static toNumber(val) {\n    if (BigNumber.isBigNumber(val)) {\n      return val.toNumber();\n    }\n    return toBigNumber(val).toNumber();\n  }\n\n  static displayPercentValue(raw) {\n    if (!BigNumber.isBigNumber(raw)) raw = new BigNumber(raw);\n    return raw.times(100).toString();\n  }\n\n  static displayFixedValue(raw, decimals = 3, round = true) {\n    return displayFixedValue(raw, decimals, round);\n  }\n}\n","import Maker from '@makerdao/dai';\nimport {\n  calcLiquidationPrice,\n  calcCollatRatio,\n  getMakerCurrencies,\n  addresses,\n  ERC20,\n  toBigNumber,\n  bnOver\n} from '../makerHelpers';\nimport { MDAI } from '@makerdao/dai-plugin-mcd';\nimport ethUnit from 'ethjs-unit';\nimport MakerCdpBase from './MakerCdpBase';\nimport { getUrns } from './chainCalls';\nimport * as daiMath from './daiMath';\nimport BigNumber from 'bignumber.js';\nconst { DAI } = Maker;\n\nexport default class MakerCDP extends MakerCdpBase {\n  constructor(cdpId, web3, services, sysVars) {\n    super(cdpId, web3, services, sysVars);\n    this.minDai = 20.5;\n    this.DAI_NAME = 'MDAI';\n  }\n\n  // Getters\n  // See MakerCdpBase\n\n  // Setup Methods =====================================================================================================\n  async init(cdpId = this.cdpId) {\n    await this.updateValues(cdpId);\n    try {\n      // TODO why is this returning undefined\n      this._governanceFee = (await this.cdp.getGovernanceFee()).toBigNumber();\n    } catch (e) {\n      this._governanceFee = false;\n    }\n    this.ready = true;\n    return this;\n  }\n\n  async updateSystemVariables(toUpdate) {\n    this.services = { ...this.services, ...toUpdate };\n  }\n\n  async updateValues(cdpId = this.cdpId) {\n    try {\n      this._proxyAddress = await this.services.getProxy();\n      this.noProxy = this._proxyAddress === null;\n      try {\n        if (this._proxyAddress) {\n          this.cdp = await this.services.getMakerCdp(cdpId, this._proxyAddress);\n        } else {\n          this.cdp = await this.services.getMakerCdp(cdpId, false);\n        }\n        this.isSafe = this.cdp.isSafe;\n        await this.getValuesFromChain();\n      } catch (e) {\n        // eslint-disable-next-line\n        console.error(e);\n      }\n    } catch (e) {\n      // eslint-disable-next-line\n      console.error(e);\n    }\n  }\n\n  async getValuesFromChain() {\n    if (!this.afterInitialization) {\n      this.afterInitialization = !this.afterInitialization;\n      return;\n    }\n\n    const urns = await getUrns(this.web3, this.cdpId, this.cdpType);\n    const value = this.cdpTypeObject.currency.wei(urns.ink);\n    if (!this.cdp.collateralAmount.toBigNumber().eq(value.toBigNumber())) {\n      this.override['collateralAmount'] = this.cdpTypeObject.currency.wei(\n        urns.ink\n      );\n    }\n\n    // todo: think about whether the type of update should be recorded and then used to determine which override to create\n    // Mostly about reducing chain calls.  if the value doesn't need a particular call. it can be skipped.\n    this.override['debtValue'] = daiMath.debtValue(\n      urns.art,\n      this.dustValues[this.cdpCollateralType].rate\n    );\n  }\n\n  async update() {\n    if (this.migrated) {\n      const currentProxy = await this.proxyService.currentProxy();\n      if (currentProxy) {\n        this.migrated = false;\n        await this.cdpService.give(this.cdpId, this._proxyAddress);\n      }\n    }\n    if (this.needsUpdate) {\n      this.opening = false;\n      this.needsUpdate = false;\n      await this.updateValues(this.cdpId);\n      this.doUpdate++;\n      return this;\n    }\n    return this;\n  }\n\n  // ====================== alphabetical (roughly) ============================\n\n  async approveProxyFor(symbol) {\n    await this.getTokens[symbol].approveUnlimited(this.proxyAddress);\n  }\n\n  async approveDai() {\n    await this.daiToken.approveUnlimited(this.proxyAddress);\n  }\n\n  async approveMkr() {\n    if (!this.proxyAddress) return;\n    await this.mkrToken.approveUnlimited(this.proxyAddress);\n  }\n\n  calcCollatRatio(ethQty, daiQty) {\n    if (ethQty <= 0 || daiQty <= 0) return toBigNumber(0);\n    const value = this.getPriceOfCurrency(this.cdpCollateralType);\n    return calcCollatRatio(value, ethQty, daiQty);\n  }\n\n  calcCollatRatioDaiChg(daiQty, changeAmountOnly = false) {\n    if (changeAmountOnly) {\n      daiQty = toBigNumber(this.debtValue).plus(toBigNumber(daiQty));\n    }\n    return toBigNumber(this.calcCollatRatio(this.collateralAmount, daiQty));\n  }\n\n  calcCollatRatioEthChg(ethQty, changeAmountOnly = false) {\n    if (changeAmountOnly) {\n      ethQty = toBigNumber(this.debtValue).plus(toBigNumber(ethQty));\n    }\n    return toBigNumber(this.calcCollatRatio(ethQty, this.debtValue));\n  }\n\n  calcLiquidationPrice(ethQty, daiQty) {\n    if (ethQty <= 0 || daiQty <= 0) return toBigNumber(0);\n    const value = this.getPriceOfCurrency(this.cdpCollateralType);\n    return calcLiquidationPrice(ethQty, daiQty, value, this.liquidationRatio);\n  }\n\n  calcLiquidationPriceDaiChg(daiQty, changeAmountOnly = false) {\n    if (changeAmountOnly) {\n      daiQty = toBigNumber(this.debtValue).plus(toBigNumber(daiQty));\n    }\n    return toBigNumber(\n      this.calcLiquidationPrice(this.collateralAmount, daiQty)\n    );\n  }\n\n  calcLiquidationPriceEthChg(ethQty, changeAmountOnly = false) {\n    if (changeAmountOnly) {\n      ethQty = toBigNumber(this.debtValue).plus(toBigNumber(ethQty));\n    }\n    return toBigNumber(this.calcLiquidationPrice(ethQty, this.debtValue));\n  }\n\n  async checkIfDestAddressHasProxy(address) {\n    await this.getProxy();\n    return await this.proxyService.getProxyAddress(address);\n  }\n\n  collateralOptions() {\n    return Object.keys(this.services.tokens).reduce((acc, entry) => {\n      acc.push({\n        symbol: entry,\n        name: this.services.tokens[entry].ilk\n      });\n      return acc;\n    }, []);\n  }\n\n  convertToTokenWei(value, decimals) {\n    const denominator = new BigNumber(10).pow(decimals);\n    return new BigNumber(value).times(denominator).toFixed(0).toString(10);\n  }\n\n  convertToTokenBase(value, decimals) {\n    const denominator = new BigNumber(10).pow(decimals);\n    return new BigNumber(value).div(denominator).toString(10);\n  }\n\n  enoughMkrToWipe(amount) {\n    return this.cdpService.enoughMkrToWipe(amount, DAI.wei);\n  }\n\n  async getProxy() {\n    this._proxyAddress = await this.services.getProxy();\n  }\n\n  async getCombinedDebtValue(proxyAddress = this._proxyAddress) {\n    return this.mcdManager.getCombinedDebtValue(proxyAddress);\n  }\n\n  getBalanceOf(currency) {\n    if (this.services.balances[currency]) {\n      return this.services.balances[currency];\n    }\n    return toBigNumber(0);\n  }\n\n  getProxyAllowancefor(currency) {\n    return this.services.proxyAllowances[currency];\n  }\n\n  async getRawProxyAllowanceforMkr() {\n    const contract = new this.web3.eth.Contract(ERC20, addresses.MCD_GOV);\n    return await contract.methods\n      .allowance(this.currentAddress, this.proxyAddress)\n      .call();\n  }\n\n  getTokenObjectFor(currency) {\n    return this.services.tokens[currency];\n  }\n\n  getCurrentPriceFor(symbol) {\n    if (!symbol) return 0;\n    return this.getPriceOfCurrency(symbol);\n  }\n\n  getEventHistory() {\n    return this.mcdManager.getEventHistory(this.cdp);\n  }\n\n  getPriceOfCurrency(type) {\n    const curr = this.mcdCurrencies[type];\n    if (curr) {\n      return curr.price._amount;\n    }\n    return 0;\n  }\n\n  async getDaiBalances() {\n    return await this.getTokens[this.DAI_NAME].balance();\n  }\n\n  hasEnough(ethQty, currency = 'ETH', balance = null) {\n    if (toBigNumber(ethQty).isNaN()) return false;\n    const _ethQty = toBigNumber(ethQty).toFixed(18);\n    if (currency === 'ETH' && balance !== null) {\n      return toBigNumber(\n        ethUnit.toWei(toBigNumber(_ethQty), 'ether').toString()\n      ).lte(balance);\n    }\n    return toBigNumber(ethUnit.toWei(_ethQty, 'ether').toString()).lte(\n      ethUnit.toWei(this.getBalanceOf(currency), 'ether')\n    );\n  }\n\n  hasEnoughAllowance(ethQty, currency = 'ETH') {\n    if (currency === 'ETH') return true;\n    const currentAllowance = this.getProxyAllowancefor(currency);\n    try {\n      const _ethQty = toBigNumber(ethQty).toFixed(18);\n      return toBigNumber(currentAllowance.toString()).gte(\n        toBigNumber(this.convertToTokenWei(_ethQty, 18).toString())\n      );\n    } catch (e) {\n      // eslint-disable-next-line\n      console.error(e);\n    }\n    // todo This is a temp solution\n    return toBigNumber(currentAllowance).gte(toBigNumber(10));\n  }\n\n  minDeposit(\n    daiQty = this.minDai,\n    ethPrice = this.currentPrice,\n    liquidationRatio = this.liquidationRatio\n  ) {\n    if (daiQty <= 0) daiQty = this.minDai;\n    return bnOver(liquidationRatio, daiQty, ethPrice);\n  }\n\n  minDepositFor(symbol) {\n    return this.minDeposit(this.minDai, this.getCurrentPriceFor(symbol));\n  }\n\n  minInSelectedCurrency(symbol) {\n    const minEth = toBigNumber(this.pethMin).times(this.wethToPethRatio);\n    return toBigNumber(minEth)\n      .times(this.getCurrentPriceFor('ETH'))\n      .div(this.getCurrentPriceFor(symbol));\n  }\n\n  setType(type) {\n    if (this.cdpId === null) {\n      this.cdpTypeObject = this.mcdManager\n        .get('mcd:cdpType')\n        .getCdpType(null, type.name);\n    }\n  }\n\n  toPeth(eth) {\n    return this.services.toPeth(eth);\n  }\n\n  // ***********************************************************************************************\n  // Interaction / Operation methods\n  // ***********************************************************************************************\n  async migrateCdp() {\n    const currentProxy = await this.getProxy();\n    if (!currentProxy) {\n      this.needsUpdate = true;\n      return await this.proxyService.ensureProxy();\n    } else if (this.needToFinishMigrating) {\n      this.needsUpdate = true;\n      await this.cdpService.give(this.cdpId, this._proxyAddress);\n    }\n  }\n\n  async openCdp(type, ethQty, daiQty) {\n    if (ethQty <= 0) return 0;\n    this.opening = true;\n    this.needsUpdate = true;\n    // TODO structure to accept multiple currencies\n\n    const newCdp = await this.mcdManager.openLockAndDraw(\n      type.ilk,\n      getMakerCurrencies()[type.currency.symbol](ethQty),\n      MDAI(daiQty)\n    );\n    return newCdp.id;\n  }\n\n  async lockEth(amount) {\n    try {\n      if (this.noProxy) {\n        return;\n      }\n      const owner = await this.mcdManager.getOwner(this.cdpId);\n      this.needsUpdate = true;\n      await this.mcdManager.lock(\n        this.cdpId,\n        this.cdpType,\n        this.mcdCurrencies[this.cdpCollateralType].currency(amount),\n        owner\n      );\n    } catch (e) {\n      // eslint-disable-next-line\n      console.error(e);\n    }\n  }\n\n  async drawDai(amount, acknowledgeBypass = false) {\n    if (\n      this.calcCollatRatio(\n        this.collateralAmount,\n        this.debtValue.plus(amount)\n      ).gt(2) ||\n      acknowledgeBypass\n    ) {\n      try {\n        if (this.noProxy) {\n          return;\n        }\n        this.needsUpdate = true;\n        await this.cdp.drawDai(MDAI(amount));\n      } catch (e) {\n        // eslint-disable-next-line\n        console.error(e);\n      }\n    }\n  }\n\n  // This should also have a acknowledgeBypass\n  async freeEth(amount, acknowledgeBypass = false) {\n    if (\n      this.debtValue.eq(0) ||\n      this.calcCollatRatio(this.ethCollateral.minus(amount), this.debtValue).gt(\n        1.5\n      ) ||\n      acknowledgeBypass\n    ) {\n      try {\n        if (this.noProxy) {\n          return;\n        }\n        this.needsUpdate = true;\n        await this.cdp.freeCollateral(amount.toString());\n      } catch (e) {\n        // eslint-disable-next-line\n        console.error(e);\n      }\n    }\n  }\n\n  async wipeDai(amount, max = false) {\n    try {\n      if (this.noProxy) {\n        return;\n      }\n      this.needsUpdate = true;\n      if (max) {\n        await this.cdp.wipeAll();\n      } else {\n        await this.cdp.wipeDai(amount.toString());\n      }\n    } catch (e) {\n      // eslint-disable-next-line\n      console.error(e);\n    }\n  }\n\n  async canCloseCdp() {\n    const value = this.debtValue.toNumber();\n    return await this.cdpService.enoughMkrToWipe(this.cdpId, value);\n  }\n\n  async closeCdp() {\n    try {\n      this.needsUpdate = true;\n      this.closing = true;\n\n      if (this.hasProxy) {\n        await this.cdpService.shutProxy(this._proxyAddress, this.cdpId);\n      }\n    } catch (e) {\n      // eslint-disable-next-line\n      console.log('closeCdp Error:');\n      // eslint-disable-next-line\n      console.error(e);\n    }\n    // }\n  }\n\n  async moveCdp(address) {\n    await this.getProxy();\n    const proxy = await this.proxyService.getProxyAddress(address);\n    if (proxy) {\n      this.needsUpdate = true;\n      this.closing = true; // for the purpose of displaying to the user closing and moving are the same\n      await this.cdp.giveToProxy(address);\n      // eslint-disable-next-line\n    } else if (!this.noProxy && proxy) {\n      this.needsUpdate = true;\n      this.closing = true;\n      await this.cdp.giveToProxy(address);\n    } else if (!this.noProxy) {\n      this.needsUpdate = true;\n      this.closing = true;\n      await this.cdp.give(address);\n    } else {\n      this.needsUpdate = true;\n      this.closing = true;\n      await this.cdp.give(address);\n    }\n  }\n}\n","import MakerCDP from '@/dapps/MakerDai/MakerCDP/MakerCDP';\n\nexport default MakerCDP;\n","import BigNumber from 'bignumber.js';\nimport { MDAI, MKR } from '@makerdao/dai-plugin-mcd';\nimport Maker from '@makerdao/dai';\nimport { locateCdps } from './locateCdps';\nimport MakerCDP from '../MakerCDP';\nimport { getDustValue } from '@/dapps/MakerDai/MakerCDP/chainCalls';\nconst { DAI } = Maker;\nconst toBigNumber = num => {\n  return new BigNumber(num);\n};\n\nconst ServiceRoles = {\n  PRICE: 'price',\n  CDP: 'cdp',\n  PROXY: 'proxy',\n  TOKEN: 'token',\n  CDP_MANAGER: 'mcd:cdpManager',\n  CDP_TYPE: 'mcd:cdpType',\n  AUCTION: 'mcd:auction',\n  SYSTEM_DATA: 'mcd:systemData',\n  QUERY_API: 'mcd:queryApi',\n  SAVINGS: 'mcd:savings'\n};\n\nexport async function setupServices(self, maker) {\n  self._priceService = maker.service(ServiceRoles.PRICE);\n  const result = await Promise.all([\n    maker.service(ServiceRoles.CDP),\n    maker.service(ServiceRoles.PROXY),\n    maker.service(ServiceRoles.TOKEN)\n  ]);\n  self._cdpService = result[0];\n  self._proxyService = result[1];\n  self._tokenService = result[2];\n  self._mcdManager = maker.service(ServiceRoles.CDP_MANAGER);\n  self._mcdSaving = maker.service(ServiceRoles.SAVINGS);\n  self._typeService = maker.service(ServiceRoles.CDP_TYPE);\n  return self;\n}\n\nexport async function setupPriceAndRatios(self, _priceService, _cdpService) {\n  self.pethMin = toBigNumber(0.005);\n\n  const result = await Promise.all([\n    _priceService.getEthPrice(),\n    _priceService.getPethPrice(),\n    _priceService.getPethPrice(),\n    _cdpService.getLiquidationRatio(),\n    _cdpService.getLiquidationPenalty(),\n    _cdpService.getAnnualGovernanceFee(),\n    _priceService.getWethToPethRatio()\n  ]);\n  self.ethPrice = toBigNumber(result[0].toNumber());\n  self.pethPrice = toBigNumber(result[1].toNumber());\n  self._targetPrice = toBigNumber(result[2].toNumber());\n  self.liquidationRatio = toBigNumber(result[3]);\n  self.liquidationPenalty = toBigNumber(result[4]);\n  self.stabilityFee = toBigNumber(result[5]);\n  self.wethToPethRatio = toBigNumber(result[6]);\n  return self;\n}\n\nexport async function getDetailsForTokens(self, collateralTokens) {\n  self.balances = {};\n  self.tokens = {};\n  self.daiToken = self._tokenService.getToken(DAI);\n  self.daiToken.balance().then(res => {\n    self.daiBalance = res.toBigNumber();\n  });\n\n  self.mkrToken = self._tokenService.getToken(MKR);\n  self.mkrToken.balance().then(res => {\n    self.mkrBalance = res.toBigNumber();\n  });\n\n  for (let i = 0; i < collateralTokens.length; i++) {\n    const token = self._tokenService.getToken(collateralTokens[i].currency);\n    self.tokens[collateralTokens[i].currency.symbol] = token;\n    token.balance().then(res => {\n      self.balances[collateralTokens[i].currency.symbol] = res.toBigNumber();\n    });\n  }\n  const token = self._tokenService.getToken(MDAI);\n  self.tokens[token.symbol] = token;\n  self.balances[token.symbol] = (await token.balance()).toBigNumber();\n\n  self.tokens['MKR'] = self.mkrToken;\n  self.tokens['DAI'] = self.daiToken;\n  self.balances['DAI'] = self.daiBalance;\n  self.balances['MKR'] = self.mkrBalance;\n  await getDustValues(self, collateralTokens);\n}\n\nexport async function getDustValues(self, collateralTokens) {\n  self.dustValues = {};\n  for (let i = 0; i < collateralTokens.length; i++) {\n    getDustValue(self.web3, collateralTokens[i].ilk).then(res => {\n      self.dustValues[collateralTokens[i].currency.symbol] = res;\n    });\n  }\n}\n\nexport async function checkAllowances(self, address, proxyAddress) {\n  self.proxyAllowances = {};\n  if (proxyAddress) {\n    const keys = Object.keys(self.tokens);\n    keys.push('MKR');\n    keys.push('DAI');\n    keys.push('MDAI');\n    for (let i = 0; i < keys.length; i++) {\n      try {\n        if (\n          typeof self.tokens[keys[i]] !== 'undefined' &&\n          typeof self.tokens[keys[i]]._contract !== 'undefined' &&\n          typeof self.tokens[keys[i]]._contract.allowance === 'function'\n        ) {\n          self.tokens[keys[i]]._contract\n            .allowance(address, proxyAddress)\n            .then(res => {\n              self.proxyAllowances[keys[i]] = toBigNumber(res);\n            });\n        } else {\n          self.proxyAllowances[keys[i]] = toBigNumber(0);\n        }\n\n        if (self.proxyAllowances[keys[i]].isNaN()) {\n          self.proxyAllowances[keys[i]] = toBigNumber(0);\n        }\n      } catch (e) {\n        self.proxyAllowances[keys[i]] = toBigNumber(0);\n      }\n    }\n  }\n  return self.proxyAllowances;\n}\n\nexport async function checkAllowanceFor(\n  proxyAllowances,\n  tokens,\n  address,\n  proxyAddress,\n  currency\n) {\n  if (proxyAddress) {\n    proxyAllowances[currency] = toBigNumber(\n      await tokens[currency].allowance(address, proxyAddress)\n    );\n  }\n  return proxyAllowances;\n}\n\nexport function collateralOptions(mcdCurrencies) {\n  return Object.keys(mcdCurrencies).reduce((acc, entry) => {\n    acc.push({\n      symbol: entry,\n      name: mcdCurrencies[entry].ilk\n    });\n    return acc;\n  }, []);\n}\n\n// setup MakerCDP\n\nexport async function setupCdpManage(self, cdpId) {\n  if (!self.allCdpIds.includes(cdpId) && self.allCdpIds.length > 0) {\n    cdpId = self.allCdpIds[0];\n  }\n  if (self.allCdpIds.length === 0) {\n    self.activeValues = self.systemValues;\n  } else {\n    self.currentCdpId = cdpId;\n    self.activeValues = await getValuesForManage.bind(self)(cdpId);\n  }\n  return self;\n}\n\nexport async function getValuesForManage(cdpId) {\n  if (typeof cdpId !== 'number') cdpId = cdpId.id;\n  const currentCdp = this.activeCdps[cdpId];\n  this.currentCdp = currentCdp;\n  const systemValues = this.systemValues;\n  return {\n    ...systemValues,\n    cdpId: cdpId,\n    maxEthDraw: currentCdp.maxEthDraw,\n    maxUsdDraw: currentCdp.maxUsdDraw,\n    ethCollateral: currentCdp.ethCollateral,\n    usdCollateral: currentCdp.usdCollateral,\n    debtValue: currentCdp.debtValue,\n    maxDai: currentCdp.maxDai,\n    collateralRatio: currentCdp.collatRatio,\n    liquidationPrice: currentCdp.liquidationPrice,\n    minEth: currentCdp.minEth,\n    isSafe: false,\n    governanceFeeOwed: currentCdp.governanceFeeOwed,\n    ethCollateralNum: currentCdp.ethCollateral,\n    zeroDebt: currentCdp.zeroDebt,\n    cdpsWithType: this.cdpsWithType\n  };\n}\n\nexport async function loadCdpDetails(\n  self,\n  cdps = self.cdps,\n  cdpsWithoutProxy = self.cdpsWithoutProxy\n) {\n  for (let i = 0; i < cdps.length; i++) {\n    const cdpId = typeof cdps[i] !== 'number' ? cdps[i].id : cdps[i];\n    self.activeCdps[cdpId] = await buildCdpObject.bind(self)(cdpId);\n  }\n  for (let i = 0; i < cdpsWithoutProxy.length; i++) {\n    const cdpId =\n      typeof cdpsWithoutProxy[i] !== 'number'\n        ? cdpsWithoutProxy[i].id\n        : cdpsWithoutProxy[i];\n    self.activeCdps[cdpId] = await buildCdpObject.bind(self)(cdpId, {\n      noProxy: true\n    });\n  }\n}\n\nexport async function loadCdpDetail(self, cdpId) {\n  return await buildCdpObject.bind(self)(cdpId);\n}\n\nexport async function updateActiveCdp(self) {\n  const removeObject = val => {\n    return typeof val === 'number'\n      ? val\n      : typeof val === 'object'\n      ? val.hasOwnProperty('id')\n        ? val.id\n        : 0\n      : val;\n  };\n  const currentCdpIds = Object.keys(self.activeCdps);\n  const { withType, withProxy, withoutProxy } = await locateCdps(\n    self,\n    self._mcdManager\n  );\n\n  self.cdpsWithType = withType;\n  self.cdps = withProxy.map(removeObject);\n  self.cdpsWithoutProxy = withoutProxy;\n\n  const newCdps = self.cdps.filter(item => {\n    return !currentCdpIds.includes(item.toString());\n  });\n  const newCdpsWithoutProxy = self.cdpsWithoutProxy.filter(\n    item => !Object.keys(self.activeCdps).includes(item)\n  );\n\n  const removedCdps = currentCdpIds.filter(item => {\n    return !(\n      self.cdps.includes(item.toString()) ||\n      self.cdps.includes(parseInt(item)) ||\n      self.cdpsWithoutProxy.includes(item.toString()) ||\n      self.cdpsWithoutProxy.includes(parseInt(item))\n    );\n  });\n\n  if (removedCdps.length > 0) {\n    removedCdps.forEach(item => delete self.activeCdps[item]);\n  }\n\n  if (newCdps.length > 0) {\n    for (let i = 0; i < newCdps.length; i++) {\n      self.activeCdps[newCdps[i]] = await buildCdpObject.bind(self)(newCdps[i]);\n    }\n  }\n\n  if (newCdpsWithoutProxy.length > 0) {\n    for (let i = 0; i < newCdpsWithoutProxy.length; i++) {\n      self.activeCdps[newCdpsWithoutProxy[i]] = await buildCdpObject.bind(self)(\n        newCdpsWithoutProxy[i],\n        {\n          noProxy: true\n        }\n      );\n    }\n  }\n}\n\nexport async function buildEmpty(self) {\n  const result = await buildCdpObject.bind(self)(null);\n  return result;\n}\n\nexport async function buildCdpObject(cdpId, options = {}, useOld = false) {\n  const sysVars = {\n    ...options,\n    tokens: this.tokens,\n    balances: this.balances,\n    _proxyAddress: this.proxyAddress,\n    liquidationPenalty: this.liquidationPenalty,\n    stabilityFee: this.stabilityFee,\n    ethPrice: this.ethPrice,\n    _targetPrice: this._targetPrice,\n    liquidationRatio: this.liquidationRatio,\n    proxyAllowances: this.proxyAllowances,\n    _daiToken: this._daiToken,\n    daiBalance: this.daiBalance,\n    _mkrToken: this._mkrToken,\n    mkrBalance: this.mkrBalance,\n    minEth: this.minEth,\n    cdpsWithType: this.cdpsWithType\n  };\n\n  const services = {\n    address: this.account.address,\n    _typeService: this._typeService,\n    _mcdManager: this._mcdManager,\n    _mcdSaving: this._mcdSaving,\n    _proxyService: this._proxyService,\n    priceService: this.priceService,\n    _cdpService: this._cdpService,\n    _tokenService: this._tokenService,\n    doUpdate: this.doUpdate,\n    getProxy: this.getProxy,\n    hasProxy: this.hasProxy,\n    getMakerCdp: this.getMakerCdp,\n    toUSD: this.toUSD,\n    _proxyAddress: this.proxyAddress,\n    liquidationPenalty: this.liquidationPenalty,\n    stabilityFee: this.stabilityFee,\n    ethPrice: this.ethPrice,\n    _targetPrice: this._targetPrice,\n    liquidationRatio: this.liquidationRatio,\n    _daiToken: this._daiToken,\n    daiBalance: this.daiBalance,\n    _mkrToken: this._mkrToken,\n    mkrBalance: this.mkrBalance,\n    minEth: this.minEth,\n    tokens: this.tokens,\n    balances: this.balances,\n    proxyAllowances: this.proxyAllowances,\n    mcdCurrencies: this.mcdCurrencies,\n    dustValues: this.dustValues\n  };\n  let makerCDP;\n  try {\n    makerCDP = new MakerCDP(cdpId, this.web3, services, sysVars);\n    if (cdpId) {\n      if (useOld) {\n        return await makerCDP.init(cdpId, useOld);\n      }\n      return await makerCDP.init(cdpId);\n    }\n    return makerCDP;\n  } catch (e) {\n    // eslint-disable-next-line\n    console.log(e);\n    return makerCDP;\n  }\n}\n\nexport async function doUpdate(self, Toast) {\n  self.proxyAddress = await self.getProxy();\n  let afterClose = false;\n  const afterOpen = self.$route.name === 'create';\n  await Promise.all([\n    self.updateActiveCdp(),\n    self.checkBalances(),\n    self.checkAllowances()\n  ]);\n  for (const idProp in self.activeCdps) {\n    if (self.activeCdps[idProp].needsUpdate) {\n      if (self.activeCdps[idProp].closing) {\n        afterClose = true;\n        delete self.activeCdps[idProp];\n        self.cdps = self.cdps.filter(item => item !== idProp);\n        self.cdpsWithoutProxy = self.cdpsWithoutProxy.filter(\n          item => item !== idProp\n        );\n      } else if (self.activeCdps[idProp].opening) {\n        await self.activeCdps[idProp].updateValues();\n      } else {\n        self.activeCdps[idProp] = await self.activeCdps[idProp].update();\n        self.activeCdps[idProp].updateSystemVariables({\n          tokens: self.tokens,\n          balances: self.balances,\n          proxyAllowances: self.proxyAllowances,\n          dustValues: self.dustValues\n        });\n      }\n    }\n    if (idProp === self.currentCdpId) {\n      await self.currentCdp.update();\n      await self.setupCdpManage(self.currentCdpId);\n    }\n  }\n\n  if (\n    Object.keys(self.activeCdps).includes(self.currentCdpId.toString()) ||\n    Object.keys(self.activeCdps).includes(self.currentCdpId)\n  ) {\n    await self.setupCdpManageFunc(self.currentCdpId);\n  } else {\n    await self.loadCdpDetails(); //todo: see if disableing this breaks anything (likely would happen with creation)\n    // todo: thie line above is where things were getting erased (new instances are being created)\n    await self.setupCdpManageFunc(self.currentCdpId);\n  }\n\n  const runAfterUpdate = () => {\n    if (self.afterUpdate.length > 0) {\n      const fn = self.afterUpdate.pop();\n      fn();\n      runAfterUpdate();\n    }\n  };\n  runAfterUpdate();\n  if (afterClose || afterOpen || self.creatingCdp) {\n    if (self.cdps.length > 0 || self.cdpsWithoutProxy.length > 0) {\n      self.goToManage();\n    } else if (self.$route.name === 'save') {\n      self.goToSave();\n    } else {\n      self.gotoCreate();\n    }\n  }\n  if (self.creatingCdp) {\n    self.creatingCdp = false;\n    await self.updateActiveCdp();\n    Toast.responseHandler(self.$t('dappsMCDMaker.vault-created'), Toast.INFO);\n  } else {\n    self.valuesUpdated++;\n    Toast.responseHandler(self.$t('dappsMCDMaker.vault-updated'), Toast.INFO);\n  }\n}\n","import Maker from '@makerdao/dai';\n\nimport * as TKNS from '@makerdao/dai-plugin-mcd';\n\nconst { DAI } = Maker;\n\nexport function getMakerCurrencies() {\n  const vals = { DAI, ...TKNS };\n  return vals;\n}\n","export default [\n  {\n    constant: true,\n    inputs: [],\n    name: 'saiJoin',\n    outputs: [{ internalType: 'contract JoinLike', name: '', type: 'address' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'wethJoin',\n    outputs: [{ internalType: 'contract JoinLike', name: '', type: 'address' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'tub',\n    outputs: [\n      { internalType: 'contract SaiTubLike', name: '', type: 'address' }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'vat',\n    outputs: [{ internalType: 'contract VatLike', name: '', type: 'address' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'cdpManager',\n    outputs: [\n      { internalType: 'contract ManagerLike', name: '', type: 'address' }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'daiJoin',\n    outputs: [{ internalType: 'contract JoinLike', name: '', type: 'address' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [{ internalType: 'uint256', name: 'wad', type: 'uint256' }],\n    name: 'swapDaiToSai',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [{ internalType: 'bytes32', name: 'cup', type: 'bytes32' }],\n    name: 'migrate',\n    outputs: [{ internalType: 'uint256', name: 'cdp', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [{ internalType: 'uint256', name: 'wad', type: 'uint256' }],\n    name: 'swapSaiToDai',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'tub_',\n        type: 'address'\n      },\n      {\n        internalType: 'address',\n        name: 'cdpManager_',\n        type: 'address'\n      },\n      { internalType: 'address', name: 'saiJoin_', type: 'address' },\n      {\n        internalType: 'address',\n        name: 'wethJoin_',\n        type: 'address'\n      },\n      { internalType: 'address', name: 'daiJoin_', type: 'address' }\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'constructor'\n  }\n];\n","const ERC20 = [\n  {\n    constant: true,\n    inputs: [],\n    name: 'name',\n    outputs: [\n      {\n        name: '',\n        type: 'string'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: '_spender',\n        type: 'address'\n      },\n      {\n        name: '_value',\n        type: 'uint256'\n      }\n    ],\n    name: 'approve',\n    outputs: [\n      {\n        name: '',\n        type: 'bool'\n      }\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'totalSupply',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: '_from',\n        type: 'address'\n      },\n      {\n        name: '_to',\n        type: 'address'\n      },\n      {\n        name: '_value',\n        type: 'uint256'\n      }\n    ],\n    name: 'transferFrom',\n    outputs: [\n      {\n        name: '',\n        type: 'bool'\n      }\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'decimals',\n    outputs: [\n      {\n        name: '',\n        type: 'uint8'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: '_owner',\n        type: 'address'\n      }\n    ],\n    name: 'balanceOf',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'symbol',\n    outputs: [\n      {\n        name: '',\n        type: 'string'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: '_to',\n        type: 'address'\n      },\n      {\n        name: '_value',\n        type: 'uint256'\n      }\n    ],\n    name: 'transfer',\n    outputs: [\n      {\n        name: '',\n        type: 'bool'\n      }\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: '_owner',\n        type: 'address'\n      },\n      {\n        name: '_spender',\n        type: 'address'\n      }\n    ],\n    name: 'allowance',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    inputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'constructor'\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: '_from',\n        type: 'address'\n      },\n      {\n        indexed: true,\n        name: '_to',\n        type: 'address'\n      },\n      {\n        indexed: false,\n        name: '_value',\n        type: 'uint256'\n      }\n    ],\n    name: 'Transfer',\n    type: 'event'\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: '_owner',\n        type: 'address'\n      },\n      {\n        indexed: true,\n        name: '_spender',\n        type: 'address'\n      },\n      {\n        indexed: false,\n        name: '_value',\n        type: 'uint256'\n      }\n    ],\n    name: 'Approval',\n    type: 'event'\n  }\n];\n\nexport default ERC20;\n","export default [\n  {\n    constant: true,\n    inputs: [\n      { internalType: 'address', name: 'manager', type: 'address' },\n      {\n        internalType: 'address',\n        name: 'guy',\n        type: 'address'\n      }\n    ],\n    name: 'getCdpsAsc',\n    outputs: [\n      { internalType: 'uint256[]', name: 'ids', type: 'uint256[]' },\n      {\n        internalType: 'address[]',\n        name: 'urns',\n        type: 'address[]'\n      },\n      { internalType: 'bytes32[]', name: 'ilks', type: 'bytes32[]' }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [\n      { internalType: 'address', name: 'manager', type: 'address' },\n      {\n        internalType: 'address',\n        name: 'guy',\n        type: 'address'\n      }\n    ],\n    name: 'getCdpsDesc',\n    outputs: [\n      { internalType: 'uint256[]', name: 'ids', type: 'uint256[]' },\n      {\n        internalType: 'address[]',\n        name: 'urns',\n        type: 'address[]'\n      },\n      { internalType: 'bytes32[]', name: 'ilks', type: 'bytes32[]' }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  }\n];\n","export default [\n  {\n    constant: false,\n    inputs: [],\n    name: 'build',\n    outputs: [\n      { internalType: 'address payable', name: 'proxy', type: 'address' }\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\n    name: 'proxies',\n    outputs: [{ internalType: 'contract DSProxy', name: '', type: 'address' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [{ internalType: 'address', name: 'owner', type: 'address' }],\n    name: 'build',\n    outputs: [\n      { internalType: 'address payable', name: 'proxy', type: 'address' }\n    ],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'address', name: 'factory_', type: 'address' }],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'constructor'\n  }\n];\n","export default [\n  {\n    constant: true,\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\n    name: 'count',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: 'uint256', name: 'cdp', type: 'uint256' },\n      {\n        internalType: 'address',\n        name: 'usr',\n        type: 'address'\n      },\n      { internalType: 'uint256', name: 'ok', type: 'uint256' }\n    ],\n    name: 'cdpAllow',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: 'bytes32', name: 'ilk', type: 'bytes32' },\n      {\n        internalType: 'uint256',\n        name: 'cdp',\n        type: 'uint256'\n      },\n      { internalType: 'address', name: 'dst', type: 'address' },\n      {\n        internalType: 'uint256',\n        name: 'wad',\n        type: 'uint256'\n      }\n    ],\n    name: 'flux',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: 'uint256', name: 'cdp', type: 'uint256' },\n      {\n        internalType: 'address',\n        name: 'dst',\n        type: 'address'\n      }\n    ],\n    name: 'quit',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    name: 'urns',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    name: 'ilks',\n    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'vat',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: 'uint256', name: 'cdp', type: 'uint256' },\n      {\n        internalType: 'int256',\n        name: 'dink',\n        type: 'int256'\n      },\n      { internalType: 'int256', name: 'dart', type: 'int256' }\n    ],\n    name: 'frob',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: 'uint256', name: 'cdp', type: 'uint256' },\n      {\n        internalType: 'address',\n        name: 'dst',\n        type: 'address'\n      },\n      { internalType: 'int256', name: 'dink', type: 'int256' },\n      {\n        internalType: 'int256',\n        name: 'dart',\n        type: 'int256'\n      }\n    ],\n    name: 'frob',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [\n      { internalType: 'address', name: '', type: 'address' },\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256'\n      },\n      { internalType: 'address', name: '', type: 'address' }\n    ],\n    name: 'cdpCan',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: 'bytes32', name: 'ilk', type: 'bytes32' },\n      {\n        internalType: 'address',\n        name: 'usr',\n        type: 'address'\n      }\n    ],\n    name: 'open',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: 'address', name: 'src', type: 'address' },\n      {\n        internalType: 'uint256',\n        name: 'cdp',\n        type: 'uint256'\n      }\n    ],\n    name: 'enter',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    name: 'list',\n    outputs: [\n      { internalType: 'uint256', name: 'prev', type: 'uint256' },\n      {\n        internalType: 'uint256',\n        name: 'next',\n        type: 'uint256'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    name: 'owns',\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\n    name: 'last',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: 'uint256', name: 'cdp', type: 'uint256' },\n      {\n        internalType: 'address',\n        name: 'dst',\n        type: 'address'\n      },\n      { internalType: 'uint256', name: 'wad', type: 'uint256' }\n    ],\n    name: 'flux',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [\n      { internalType: 'address', name: '', type: 'address' },\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address'\n      }\n    ],\n    name: 'urnCan',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'cdpi',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: 'address', name: 'usr', type: 'address' },\n      {\n        internalType: 'uint256',\n        name: 'ok',\n        type: 'uint256'\n      }\n    ],\n    name: 'urnAllow',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [{ internalType: 'bytes32', name: 'ilk', type: 'bytes32' }],\n    name: 'open',\n    outputs: [{ internalType: 'uint256', name: 'cdp', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: 'uint256', name: 'cdpSrc', type: 'uint256' },\n      {\n        internalType: 'uint256',\n        name: 'cdpDst',\n        type: 'uint256'\n      }\n    ],\n    name: 'shift',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: 'uint256', name: 'cdp', type: 'uint256' },\n      {\n        internalType: 'address',\n        name: 'dst',\n        type: 'address'\n      },\n      { internalType: 'uint256', name: 'rad', type: 'uint256' }\n    ],\n    name: 'move',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\n    name: 'first',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      { internalType: 'uint256', name: 'cdp', type: 'uint256' },\n      {\n        internalType: 'address',\n        name: 'dst',\n        type: 'address'\n      }\n    ],\n    name: 'give',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    inputs: [{ internalType: 'address', name: 'vat_', type: 'address' }],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'constructor'\n  },\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: 'address', name: 'usr', type: 'address' },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'own',\n        type: 'address'\n      },\n      { indexed: false, internalType: 'uint256', name: 'cdp', type: 'uint256' }\n    ],\n    name: 'NewCdp',\n    type: 'event'\n  },\n  {\n    anonymous: true,\n    inputs: [\n      { indexed: true, internalType: 'bytes4', name: 'sig', type: 'bytes4' },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'usr',\n        type: 'address'\n      },\n      { indexed: true, internalType: 'bytes32', name: 'arg1', type: 'bytes32' },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'arg2',\n        type: 'bytes32'\n      },\n      { indexed: false, internalType: 'bytes', name: 'data', type: 'bytes' }\n    ],\n    name: 'LogNote',\n    type: 'event'\n  }\n];\n","export default [\n  {\n    inputs: [{ internalType: 'address', name: 'vat_', type: 'address' }],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'constructor'\n  },\n  {\n    anonymous: true,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes4',\n        name: 'sig',\n        type: 'bytes4'\n      },\n      {\n        indexed: true,\n        internalType: 'address',\n        name: 'usr',\n        type: 'address'\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'arg1',\n        type: 'bytes32'\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'arg2',\n        type: 'bytes32'\n      },\n      { indexed: false, internalType: 'bytes', name: 'data', type: 'bytes' }\n    ],\n    name: 'LogNote',\n    type: 'event'\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: 'bytes32',\n        name: 'ilk',\n        type: 'bytes32'\n      },\n      {\n        indexed: false,\n        internalType: 'bytes32',\n        name: 'val',\n        type: 'bytes32'\n      },\n      { indexed: false, internalType: 'uint256', name: 'spot', type: 'uint256' }\n    ],\n    name: 'Poke',\n    type: 'event'\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: 'cage',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [{ internalType: 'address', name: 'guy', type: 'address' }],\n    name: 'deny',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'ilk',\n        type: 'bytes32'\n      },\n      { internalType: 'bytes32', name: 'what', type: 'bytes32' },\n      {\n        internalType: 'uint256',\n        name: 'data',\n        type: 'uint256'\n      }\n    ],\n    name: 'file',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'what',\n        type: 'bytes32'\n      },\n      { internalType: 'uint256', name: 'data', type: 'uint256' }\n    ],\n    name: 'file',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'ilk',\n        type: 'bytes32'\n      },\n      { internalType: 'bytes32', name: 'what', type: 'bytes32' },\n      {\n        internalType: 'address',\n        name: 'pip_',\n        type: 'address'\n      }\n    ],\n    name: 'file',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],\n    name: 'ilks',\n    outputs: [\n      {\n        internalType: 'contract PipLike',\n        name: 'pip',\n        type: 'address'\n      },\n      { internalType: 'uint256', name: 'mat', type: 'uint256' }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'live',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'par',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [{ internalType: 'bytes32', name: 'ilk', type: 'bytes32' }],\n    name: 'poke',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [{ internalType: 'address', name: 'guy', type: 'address' }],\n    name: 'rely',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'vat',\n    outputs: [{ internalType: 'contract VatLike', name: '', type: 'address' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\n    name: 'wards',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  }\n];\n","export default [\n  {\n    inputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'constructor'\n  },\n  {\n    anonymous: true,\n    inputs: [\n      {\n        indexed: true,\n        internalType: 'bytes4',\n        name: 'sig',\n        type: 'bytes4'\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'arg1',\n        type: 'bytes32'\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'arg2',\n        type: 'bytes32'\n      },\n      {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'arg3',\n        type: 'bytes32'\n      },\n      { indexed: false, internalType: 'bytes', name: 'data', type: 'bytes' }\n    ],\n    name: 'LogNote',\n    type: 'event'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'Line',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: 'cage',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [\n      { internalType: 'address', name: '', type: 'address' },\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address'\n      }\n    ],\n    name: 'can',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\n    name: 'dai',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'debt',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [{ internalType: 'address', name: 'usr', type: 'address' }],\n    name: 'deny',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'ilk',\n        type: 'bytes32'\n      },\n      { internalType: 'bytes32', name: 'what', type: 'bytes32' },\n      {\n        internalType: 'uint256',\n        name: 'data',\n        type: 'uint256'\n      }\n    ],\n    name: 'file',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'what',\n        type: 'bytes32'\n      },\n      { internalType: 'uint256', name: 'data', type: 'uint256' }\n    ],\n    name: 'file',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'ilk',\n        type: 'bytes32'\n      },\n      { internalType: 'address', name: 'src', type: 'address' },\n      {\n        internalType: 'address',\n        name: 'dst',\n        type: 'address'\n      },\n      { internalType: 'uint256', name: 'wad', type: 'uint256' }\n    ],\n    name: 'flux',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'i',\n        type: 'bytes32'\n      },\n      { internalType: 'address', name: 'u', type: 'address' },\n      {\n        internalType: 'int256',\n        name: 'rate',\n        type: 'int256'\n      }\n    ],\n    name: 'fold',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'ilk',\n        type: 'bytes32'\n      },\n      { internalType: 'address', name: 'src', type: 'address' },\n      {\n        internalType: 'address',\n        name: 'dst',\n        type: 'address'\n      },\n      { internalType: 'int256', name: 'dink', type: 'int256' },\n      {\n        internalType: 'int256',\n        name: 'dart',\n        type: 'int256'\n      }\n    ],\n    name: 'fork',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'i',\n        type: 'bytes32'\n      },\n      { internalType: 'address', name: 'u', type: 'address' },\n      {\n        internalType: 'address',\n        name: 'v',\n        type: 'address'\n      },\n      { internalType: 'address', name: 'w', type: 'address' },\n      {\n        internalType: 'int256',\n        name: 'dink',\n        type: 'int256'\n      },\n      { internalType: 'int256', name: 'dart', type: 'int256' }\n    ],\n    name: 'frob',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [\n      { internalType: 'bytes32', name: '', type: 'bytes32' },\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address'\n      }\n    ],\n    name: 'gem',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'i',\n        type: 'bytes32'\n      },\n      { internalType: 'address', name: 'u', type: 'address' },\n      {\n        internalType: 'address',\n        name: 'v',\n        type: 'address'\n      },\n      { internalType: 'address', name: 'w', type: 'address' },\n      {\n        internalType: 'int256',\n        name: 'dink',\n        type: 'int256'\n      },\n      { internalType: 'int256', name: 'dart', type: 'int256' }\n    ],\n    name: 'grab',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [{ internalType: 'uint256', name: 'rad', type: 'uint256' }],\n    name: 'heal',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [{ internalType: 'address', name: 'usr', type: 'address' }],\n    name: 'hope',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],\n    name: 'ilks',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: 'Art',\n        type: 'uint256'\n      },\n      { internalType: 'uint256', name: 'rate', type: 'uint256' },\n      {\n        internalType: 'uint256',\n        name: 'spot',\n        type: 'uint256'\n      },\n      { internalType: 'uint256', name: 'line', type: 'uint256' },\n      {\n        internalType: 'uint256',\n        name: 'dust',\n        type: 'uint256'\n      }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [{ internalType: 'bytes32', name: 'ilk', type: 'bytes32' }],\n    name: 'init',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'live',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'src',\n        type: 'address'\n      },\n      { internalType: 'address', name: 'dst', type: 'address' },\n      {\n        internalType: 'uint256',\n        name: 'rad',\n        type: 'uint256'\n      }\n    ],\n    name: 'move',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [{ internalType: 'address', name: 'usr', type: 'address' }],\n    name: 'nope',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [{ internalType: 'address', name: 'usr', type: 'address' }],\n    name: 'rely',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\n    name: 'sin',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'ilk',\n        type: 'bytes32'\n      },\n      { internalType: 'address', name: 'usr', type: 'address' },\n      {\n        internalType: 'int256',\n        name: 'wad',\n        type: 'int256'\n      }\n    ],\n    name: 'slip',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: 'address',\n        name: 'u',\n        type: 'address'\n      },\n      { internalType: 'address', name: 'v', type: 'address' },\n      {\n        internalType: 'uint256',\n        name: 'rad',\n        type: 'uint256'\n      }\n    ],\n    name: 'suck',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [\n      { internalType: 'bytes32', name: '', type: 'bytes32' },\n      {\n        internalType: 'address',\n        name: '',\n        type: 'address'\n      }\n    ],\n    name: 'urns',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: 'ink',\n        type: 'uint256'\n      },\n      { internalType: 'uint256', name: 'art', type: 'uint256' }\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'vice',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  },\n  {\n    constant: true,\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\n    name: 'wards',\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  }\n];\n","import BigNumber from 'bignumber.js';\nimport { ERC20 } from './ABIs';\n\nexport function toBigNumber(num) {\n  const bignumber = new BigNumber(num);\n  bignumber.displayFixed = displayFixedValue.bind(this, bignumber);\n  return new BigNumber(num);\n}\n\nexport function toNumber(val) {\n  if (BigNumber.isBigNumber(val)) {\n    return val.toNumber();\n  }\n  return toBigNumber(val).toNumber();\n}\n\nexport function displayPercentValue(raw) {\n  if (!BigNumber.isBigNumber(raw)) raw = new BigNumber(raw);\n  return raw.times(100).toString();\n}\n\nexport function displayFixedValue(\n  raw,\n  decimals = 3,\n  finiteCheck = true,\n  round = true,\n  roundUp = false\n) {\n  try {\n    if (!BigNumber.isBigNumber(raw)) raw = new BigNumber(raw);\n    if ((!isFinite(raw) || isNaN(raw)) && finiteCheck) return '--';\n    if (round && !roundUp)\n      return raw.toFixed(decimals, BigNumber.ROUND_DOWN).toString();\n    if (round && roundUp)\n      return raw.toFixed(decimals, BigNumber.ROUND_UP).toString();\n\n    return raw.toFixed(decimals).toString();\n  } catch (e) {\n    return '--';\n  }\n}\n\nexport function displayFixedPercent(raw, decimals = 3, round = true) {\n  try {\n    const value = displayFixedValue(displayPercentValue(raw), decimals, round);\n    if (isFinite(value) && new BigNumber(value).gt(0)) {\n      return value;\n    }\n    return '--';\n  } catch (e) {\n    return '--';\n  }\n}\n\n/**\n * @return {number}\n */\nexport function CdpNum(cdpId) {\n  if (cdpId === undefined) return 0;\n  return typeof cdpId === 'number'\n    ? cdpId\n    : typeof cdpId === 'object'\n    ? 0\n    : cdpId.hasOwnProperty('id')\n    ? cdpId.id\n    : 0;\n}\n\n// Calculations\nexport function bnOver(one, two, three) {\n  return toBigNumber(one).times(toBigNumber(two)).div(toBigNumber(three));\n}\n\nexport function maxDai(ethPrice, ethCollateral, liquidationRatio, debtValue) {\n  return bnOver(\n    toBigNumber(ethPrice),\n    toBigNumber(ethCollateral),\n    toBigNumber(liquidationRatio)\n  ).minus(toBigNumber(debtValue));\n}\n\nexport function maxPethDraw(\n  pethCollateral,\n  liquidationRatio,\n  debtValue,\n  pethPrice,\n  pethMin = 0\n) {\n  return toBigNumber(pethCollateral)\n    .minus(\n      bnOver(\n        toBigNumber(liquidationRatio).plus(0.001),\n        toBigNumber(debtValue),\n        toBigNumber(pethPrice)\n      )\n    )\n    .minus(toBigNumber(pethMin).times(1.0));\n}\n\nexport function maxEthDraw(\n  ethCollateral,\n  liquidationRatio,\n  debtValue,\n  ethPrice,\n  minEth = 0\n) {\n  return toBigNumber(ethCollateral)\n    .minus(\n      bnOver(\n        toBigNumber(liquidationRatio),\n        toBigNumber(debtValue),\n        toBigNumber(ethPrice)\n      )\n    )\n    .minus(toBigNumber(minEth).times(1.0));\n}\n\nexport function calcCollatRatio(ethPrice, ethQty, daiQty) {\n  return bnOver(toBigNumber(ethPrice), ethQty, daiQty);\n}\n\nexport function calcLiquidationPrice(\n  ethQty,\n  daiQty,\n  ethPrice,\n  liquidationRatio\n) {\n  const getInt = parseInt(ethPrice);\n  for (let i = getInt; i > 0; i--) {\n    const atValue = bnOver(i, ethQty, daiQty).lte(\n      toBigNumber(liquidationRatio)\n    );\n    if (atValue) {\n      return i;\n    }\n  }\n  for (let i = 100; i > 0; i--) {\n    const atValue = bnOver(i / 100, ethQty, daiQty).lte(\n      toBigNumber(liquidationRatio)\n    );\n    if (atValue) {\n      return i / 100;\n    }\n  }\n  return toBigNumber(0.01);\n}\n\nexport function checkAllowance(web3, tokenAddress, userAddress, proxyAddress) {\n  const contract = new web3.eth.contract(ERC20, tokenAddress);\n  return contract.methods.allowance(userAddress, proxyAddress).call();\n}\n","import {\n  addresses,\n  Vat,\n  Spotter,\n  GetCdps,\n  CdpManager,\n  ProxyRegistry\n} from '../makerHelpers';\nimport assert from 'assert';\n\nfunction padRight(string, chars, sign) {\n  return string + new Array(chars - string.length + 1).join(sign ? sign : '0');\n}\n\nfunction toHex(str, { with0x = true, rightPadding = 64 } = {}) {\n  let result = '';\n  for (let i = 0; i < str.length; i++) {\n    result += str.charCodeAt(i).toString(16);\n  }\n  if (rightPadding > 0) result = padRight(result, rightPadding);\n  return with0x ? '0x' + result : result;\n}\n\nfunction stringToBytes(str) {\n  return '0x' + Buffer.from(str).toString('hex');\n}\n\nfunction bytesToString(hex) {\n  return Buffer.from(hex.replace(/^0x/, ''), 'hex')\n    .toString()\n    .replace(/\\x00/g, ''); // eslint-disable-line no-control-regex\n}\n\nexport async function getProxy() {\n  const proxyReg = new this.web3.eth.Contract(\n    ProxyRegistry,\n    addresses.PROXY_REGISTRY\n  );\n\n  let proxy = await proxyReg.methods.proxies(this.account.address).call();\n  if (proxy === '0x0000000000000000000000000000000000000000') {\n    proxy = null;\n  }\n  return proxy;\n}\n\nexport async function getCdpIds(web3, proxyAddress) {\n  const contract = new web3.eth.Contract(GetCdps, addresses.GET_CDPS);\n  const results = await contract.methods\n    .getCdpsDesc(addresses.CDP_MANAGER, proxyAddress)\n    .call();\n  const ids = results.ids;\n  const ilks = results.ilks;\n  assert(ids.length === ilks.length, 'ids and ilks must be the same length');\n  return ids.map((id, index) => {\n    return { id: parseInt(id), ilk: bytesToString(ilks[index]) };\n  });\n}\n\nexport async function getDustValue(web3, symbol) {\n  const contract = new web3.eth.Contract(Vat, addresses.MCD_VAT);\n\n  return await contract.methods.ilks(toHex(symbol)).call();\n}\n\nexport async function getParValue(web3) {\n  const contract = new web3.eth.Contract(Spotter, addresses.MCD_SPOT);\n\n  return await contract.methods.par().call();\n}\n\nexport async function getUrns(web3, id, name) {\n  try {\n    const contract = new web3.eth.Contract(CdpManager, addresses.CDP_MANAGER);\n    const vat = new web3.eth.Contract(Vat, addresses.MCD_VAT);\n    const urn = await contract.methods.urns(id).call();\n    const result = await vat.methods.urns(stringToBytes(name), urn).call();\n    return result;\n  } catch (e) {\n    // eslint-disable-next-line\n    console.log(e);\n  }\n}\n","import { addresses, Vat, Spotter, GetCdps, CdpManager } from '../makerHelpers';\nimport assert from 'assert';\n\nfunction padRight(string, chars, sign) {\n  return string + new Array(chars - string.length + 1).join(sign ? sign : '0');\n}\n\nfunction toHex(str, { with0x = true, rightPadding = 64 } = {}) {\n  let result = '';\n  for (let i = 0; i < str.length; i++) {\n    result += str.charCodeAt(i).toString(16);\n  }\n  if (rightPadding > 0) result = padRight(result, rightPadding);\n  return with0x ? '0x' + result : result;\n}\n\nfunction stringToBytes(str) {\n  return '0x' + Buffer.from(str).toString('hex');\n}\n\nfunction bytesToString(hex) {\n  return Buffer.from(hex.replace(/^0x/, ''), 'hex')\n    .toString()\n    .replace(/\\x00/g, ''); // eslint-disable-line no-control-regex\n}\n\nexport async function getCdpIds(web3, proxyAddress) {\n  const contract = new web3.eth.Contract(GetCdps, addresses.GET_CDPS);\n  const results = await contract.methods\n    .getCdpsDesc(addresses.CDP_MANAGER, proxyAddress)\n    .call();\n  const ids = results.ids;\n  const ilks = results.ilks;\n  assert(ids.length === ilks.length, 'ids and ilks must be the same length');\n  const collected = ids.map((id, index) => {\n    return { id: parseInt(id), ilk: bytesToString(ilks[index]) };\n  });\n  return collected;\n}\n\nexport async function getDustValue(web3, symbol) {\n  const contract = new web3.eth.Contract(Vat, addresses.MCD_VAT);\n\n  return await contract.methods.ilks(toHex(symbol)).call();\n}\n\nexport async function getParValue(web3) {\n  const contract = new web3.eth.Contract(Spotter, addresses.MCD_SPOT);\n\n  return await contract.methods.par().call();\n}\n\nexport async function getUrns(web3, id, name) {\n  try {\n    const contract = new web3.eth.Contract(CdpManager, addresses.CDP_MANAGER);\n    const vat = new web3.eth.Contract(Vat, addresses.MCD_VAT);\n    const urn = await contract.methods.urns(id).call();\n    const result = await vat.methods.urns(stringToBytes(name), urn).call();\n    return result;\n  } catch (e) {\n    // eslint-disable-next-line\n    console.log(e);\n  }\n}\n"],"sourceRoot":""}